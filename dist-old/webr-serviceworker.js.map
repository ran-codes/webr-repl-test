{
  "version": 3,
  "sources": ["../src/node_modules/@msgpack/msgpack/src/utils/int.ts", "../src/node_modules/@msgpack/msgpack/src/utils/utf8.ts", "../src/node_modules/@msgpack/msgpack/src/ExtData.ts", "../src/node_modules/@msgpack/msgpack/src/DecodeError.ts", "../src/node_modules/@msgpack/msgpack/src/timestamp.ts", "../src/node_modules/@msgpack/msgpack/src/ExtensionCodec.ts", "../src/node_modules/@msgpack/msgpack/src/utils/typedArrays.ts", "../src/node_modules/@msgpack/msgpack/src/Encoder.ts", "../src/node_modules/@msgpack/msgpack/src/encode.ts", "../src/node_modules/@msgpack/msgpack/src/utils/prettyByte.ts", "../src/node_modules/@msgpack/msgpack/src/CachedKeyDecoder.ts", "../src/node_modules/@msgpack/msgpack/src/Decoder.ts", "../src/node_modules/@msgpack/msgpack/src/decode.ts", "../src/node_modules/@msgpack/msgpack/src/utils/stream.ts", "../src/node_modules/@msgpack/msgpack/src/decodeAsync.ts", "../src/node_modules/@msgpack/msgpack/src/index.ts", "../src/webR/error.ts", "../src/webR/compat.ts", "../src/webR/robj.ts", "../src/webR/emscripten.ts", "../src/webR/utils-r.ts", "../src/webR/robj-worker.ts", "../src/webR/utils.ts", "../src/webR/chan/serviceworker.ts"],
  "sourcesContent": ["// Integer Utility\n\nexport const UINT32_MAX = 0xffff_ffff;\n\n// DataView extension to handle int64 / uint64,\n// where the actual range is 53-bits integer (a.k.a. safe integer)\n\nexport function setUint64(view: DataView, offset: number, value: number): void {\n  const high = value / 0x1_0000_0000;\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function setInt64(view: DataView, offset: number, value: number): void {\n  const high = Math.floor(value / 0x1_0000_0000);\n  const low = value; // high bits are truncated by DataView\n  view.setUint32(offset, high);\n  view.setUint32(offset + 4, low);\n}\n\nexport function getInt64(view: DataView, offset: number): number {\n  const high = view.getInt32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n\nexport function getUint64(view: DataView, offset: number): number {\n  const high = view.getUint32(offset);\n  const low = view.getUint32(offset + 4);\n  return high * 0x1_0000_0000 + low;\n}\n", "/* eslint-disable @typescript-eslint/no-unnecessary-condition */\nimport { UINT32_MAX } from \"./int\";\n\nconst TEXT_ENCODING_AVAILABLE =\n  (typeof process === \"undefined\" || process?.env?.[\"TEXT_ENCODING\"] !== \"never\") &&\n  typeof TextEncoder !== \"undefined\" &&\n  typeof TextDecoder !== \"undefined\";\n\nexport function utf8Count(str: string): number {\n  const strLength = str.length;\n\n  let byteLength = 0;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      byteLength++;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      byteLength += 2;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        byteLength += 3;\n      } else {\n        // 4-byte\n        byteLength += 4;\n      }\n    }\n  }\n  return byteLength;\n}\n\nexport function utf8EncodeJs(str: string, output: Uint8Array, outputOffset: number): void {\n  const strLength = str.length;\n  let offset = outputOffset;\n  let pos = 0;\n  while (pos < strLength) {\n    let value = str.charCodeAt(pos++);\n\n    if ((value & 0xffffff80) === 0) {\n      // 1-byte\n      output[offset++] = value;\n      continue;\n    } else if ((value & 0xfffff800) === 0) {\n      // 2-bytes\n      output[offset++] = ((value >> 6) & 0x1f) | 0xc0;\n    } else {\n      // handle surrogate pair\n      if (value >= 0xd800 && value <= 0xdbff) {\n        // high surrogate\n        if (pos < strLength) {\n          const extra = str.charCodeAt(pos);\n          if ((extra & 0xfc00) === 0xdc00) {\n            ++pos;\n            value = ((value & 0x3ff) << 10) + (extra & 0x3ff) + 0x10000;\n          }\n        }\n      }\n\n      if ((value & 0xffff0000) === 0) {\n        // 3-byte\n        output[offset++] = ((value >> 12) & 0x0f) | 0xe0;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      } else {\n        // 4-byte\n        output[offset++] = ((value >> 18) & 0x07) | 0xf0;\n        output[offset++] = ((value >> 12) & 0x3f) | 0x80;\n        output[offset++] = ((value >> 6) & 0x3f) | 0x80;\n      }\n    }\n\n    output[offset++] = (value & 0x3f) | 0x80;\n  }\n}\n\nconst sharedTextEncoder = TEXT_ENCODING_AVAILABLE ? new TextEncoder() : undefined;\nexport const TEXT_ENCODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_ENCODING\"] !== \"force\"\n  ? 200\n  : 0;\n\nfunction utf8EncodeTEencode(str: string, output: Uint8Array, outputOffset: number): void {\n  output.set(sharedTextEncoder!.encode(str), outputOffset);\n}\n\nfunction utf8EncodeTEencodeInto(str: string, output: Uint8Array, outputOffset: number): void {\n  sharedTextEncoder!.encodeInto(str, output.subarray(outputOffset));\n}\n\nexport const utf8EncodeTE = sharedTextEncoder?.encodeInto ? utf8EncodeTEencodeInto : utf8EncodeTEencode;\n\nconst CHUNK_SIZE = 0x1_000;\n\nexport function utf8DecodeJs(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  let offset = inputOffset;\n  const end = offset + byteLength;\n\n  const units: Array<number> = [];\n  let result = \"\";\n  while (offset < end) {\n    const byte1 = bytes[offset++]!;\n    if ((byte1 & 0x80) === 0) {\n      // 1 byte\n      units.push(byte1);\n    } else if ((byte1 & 0xe0) === 0xc0) {\n      // 2 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 6) | byte2);\n    } else if ((byte1 & 0xf0) === 0xe0) {\n      // 3 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      units.push(((byte1 & 0x1f) << 12) | (byte2 << 6) | byte3);\n    } else if ((byte1 & 0xf8) === 0xf0) {\n      // 4 bytes\n      const byte2 = bytes[offset++]! & 0x3f;\n      const byte3 = bytes[offset++]! & 0x3f;\n      const byte4 = bytes[offset++]! & 0x3f;\n      let unit = ((byte1 & 0x07) << 0x12) | (byte2 << 0x0c) | (byte3 << 0x06) | byte4;\n      if (unit > 0xffff) {\n        unit -= 0x10000;\n        units.push(((unit >>> 10) & 0x3ff) | 0xd800);\n        unit = 0xdc00 | (unit & 0x3ff);\n      }\n      units.push(unit);\n    } else {\n      units.push(byte1);\n    }\n\n    if (units.length >= CHUNK_SIZE) {\n      result += String.fromCharCode(...units);\n      units.length = 0;\n    }\n  }\n\n  if (units.length > 0) {\n    result += String.fromCharCode(...units);\n  }\n\n  return result;\n}\n\nconst sharedTextDecoder = TEXT_ENCODING_AVAILABLE ? new TextDecoder() : null;\nexport const TEXT_DECODER_THRESHOLD = !TEXT_ENCODING_AVAILABLE\n  ? UINT32_MAX\n  : typeof process !== \"undefined\" && process?.env?.[\"TEXT_DECODER\"] !== \"force\"\n  ? 200\n  : 0;\n\nexport function utf8DecodeTD(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n  const stringBytes = bytes.subarray(inputOffset, inputOffset + byteLength);\n  return sharedTextDecoder!.decode(stringBytes);\n}\n", "/**\n * ExtData is used to handle Extension Types that are not registered to ExtensionCodec.\n */\nexport class ExtData {\n  constructor(readonly type: number, readonly data: Uint8Array) {}\n}\n", "export class DecodeError extends Error {\n  constructor(message: string) {\n    super(message);\n\n    // fix the prototype chain in a cross-platform way\n    const proto: typeof DecodeError.prototype = Object.create(DecodeError.prototype);\n    Object.setPrototypeOf(this, proto);\n\n    Object.defineProperty(this, \"name\", {\n      configurable: true,\n      enumerable: false,\n      value: DecodeError.name,\n    });\n  }\n}\n", "// https://github.com/msgpack/msgpack/blob/master/spec.md#timestamp-extension-type\nimport { DecodeError } from \"./DecodeError\";\nimport { getInt64, setInt64 } from \"./utils/int\";\n\nexport const EXT_TIMESTAMP = -1;\n\nexport type TimeSpec = {\n  sec: number;\n  nsec: number;\n};\n\nconst TIMESTAMP32_MAX_SEC = 0x100000000 - 1; // 32-bit unsigned int\nconst TIMESTAMP64_MAX_SEC = 0x400000000 - 1; // 34-bit unsigned int\n\nexport function encodeTimeSpecToTimestamp({ sec, nsec }: TimeSpec): Uint8Array {\n  if (sec >= 0 && nsec >= 0 && sec <= TIMESTAMP64_MAX_SEC) {\n    // Here sec >= 0 && nsec >= 0\n    if (nsec === 0 && sec <= TIMESTAMP32_MAX_SEC) {\n      // timestamp 32 = { sec32 (unsigned) }\n      const rv = new Uint8Array(4);\n      const view = new DataView(rv.buffer);\n      view.setUint32(0, sec);\n      return rv;\n    } else {\n      // timestamp 64 = { nsec30 (unsigned), sec34 (unsigned) }\n      const secHigh = sec / 0x100000000;\n      const secLow = sec & 0xffffffff;\n      const rv = new Uint8Array(8);\n      const view = new DataView(rv.buffer);\n      // nsec30 | secHigh2\n      view.setUint32(0, (nsec << 2) | (secHigh & 0x3));\n      // secLow32\n      view.setUint32(4, secLow);\n      return rv;\n    }\n  } else {\n    // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n    const rv = new Uint8Array(12);\n    const view = new DataView(rv.buffer);\n    view.setUint32(0, nsec);\n    setInt64(view, 4, sec);\n    return rv;\n  }\n}\n\nexport function encodeDateToTimeSpec(date: Date): TimeSpec {\n  const msec = date.getTime();\n  const sec = Math.floor(msec / 1e3);\n  const nsec = (msec - sec * 1e3) * 1e6;\n\n  // Normalizes { sec, nsec } to ensure nsec is unsigned.\n  const nsecInSec = Math.floor(nsec / 1e9);\n  return {\n    sec: sec + nsecInSec,\n    nsec: nsec - nsecInSec * 1e9,\n  };\n}\n\nexport function encodeTimestampExtension(object: unknown): Uint8Array | null {\n  if (object instanceof Date) {\n    const timeSpec = encodeDateToTimeSpec(object);\n    return encodeTimeSpecToTimestamp(timeSpec);\n  } else {\n    return null;\n  }\n}\n\nexport function decodeTimestampToTimeSpec(data: Uint8Array): TimeSpec {\n  const view = new DataView(data.buffer, data.byteOffset, data.byteLength);\n\n  // data may be 32, 64, or 96 bits\n  switch (data.byteLength) {\n    case 4: {\n      // timestamp 32 = { sec32 }\n      const sec = view.getUint32(0);\n      const nsec = 0;\n      return { sec, nsec };\n    }\n    case 8: {\n      // timestamp 64 = { nsec30, sec34 }\n      const nsec30AndSecHigh2 = view.getUint32(0);\n      const secLow32 = view.getUint32(4);\n      const sec = (nsec30AndSecHigh2 & 0x3) * 0x100000000 + secLow32;\n      const nsec = nsec30AndSecHigh2 >>> 2;\n      return { sec, nsec };\n    }\n    case 12: {\n      // timestamp 96 = { nsec32 (unsigned), sec64 (signed) }\n\n      const sec = getInt64(view, 4);\n      const nsec = view.getUint32(0);\n      return { sec, nsec };\n    }\n    default:\n      throw new DecodeError(`Unrecognized data size for timestamp (expected 4, 8, or 12): ${data.length}`);\n  }\n}\n\nexport function decodeTimestampExtension(data: Uint8Array): Date {\n  const timeSpec = decodeTimestampToTimeSpec(data);\n  return new Date(timeSpec.sec * 1e3 + timeSpec.nsec / 1e6);\n}\n\nexport const timestampExtension = {\n  type: EXT_TIMESTAMP,\n  encode: encodeTimestampExtension,\n  decode: decodeTimestampExtension,\n};\n", "// ExtensionCodec to handle MessagePack extensions\n\nimport { ExtData } from \"./ExtData\";\nimport { timestampExtension } from \"./timestamp\";\n\nexport type ExtensionDecoderType<ContextType> = (\n  data: Uint8Array,\n  extensionType: number,\n  context: ContextType,\n) => unknown;\n\nexport type ExtensionEncoderType<ContextType> = (input: unknown, context: ContextType) => Uint8Array | null;\n\n// immutable interface to ExtensionCodec\nexport type ExtensionCodecType<ContextType> = {\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n  tryToEncode(object: unknown, context: ContextType): ExtData | null;\n  decode(data: Uint8Array, extType: number, context: ContextType): unknown;\n};\n\nexport class ExtensionCodec<ContextType = undefined> implements ExtensionCodecType<ContextType> {\n  public static readonly defaultCodec: ExtensionCodecType<undefined> = new ExtensionCodec();\n\n  // ensures ExtensionCodecType<X> matches ExtensionCodec<X>\n  // this will make type errors a lot more clear\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  __brand?: ContextType;\n\n  // built-in extensions\n  private readonly builtInEncoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly builtInDecoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  // custom extensions\n  private readonly encoders: Array<ExtensionEncoderType<ContextType> | undefined | null> = [];\n  private readonly decoders: Array<ExtensionDecoderType<ContextType> | undefined | null> = [];\n\n  public constructor() {\n    this.register(timestampExtension);\n  }\n\n  public register({\n    type,\n    encode,\n    decode,\n  }: {\n    type: number;\n    encode: ExtensionEncoderType<ContextType>;\n    decode: ExtensionDecoderType<ContextType>;\n  }): void {\n    if (type >= 0) {\n      // custom extensions\n      this.encoders[type] = encode;\n      this.decoders[type] = decode;\n    } else {\n      // built-in extensions\n      const index = 1 + type;\n      this.builtInEncoders[index] = encode;\n      this.builtInDecoders[index] = decode;\n    }\n  }\n\n  public tryToEncode(object: unknown, context: ContextType): ExtData | null {\n    // built-in extensions\n    for (let i = 0; i < this.builtInEncoders.length; i++) {\n      const encodeExt = this.builtInEncoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = -1 - i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    // custom extensions\n    for (let i = 0; i < this.encoders.length; i++) {\n      const encodeExt = this.encoders[i];\n      if (encodeExt != null) {\n        const data = encodeExt(object, context);\n        if (data != null) {\n          const type = i;\n          return new ExtData(type, data);\n        }\n      }\n    }\n\n    if (object instanceof ExtData) {\n      // to keep ExtData as is\n      return object;\n    }\n    return null;\n  }\n\n  public decode(data: Uint8Array, type: number, context: ContextType): unknown {\n    const decodeExt = type < 0 ? this.builtInDecoders[-1 - type] : this.decoders[type];\n    if (decodeExt) {\n      return decodeExt(data, type, context);\n    } else {\n      // decode() does not fail, returns ExtData instead.\n      return new ExtData(type, data);\n    }\n  }\n}\n", "export function ensureUint8Array(buffer: ArrayLike<number> | Uint8Array | ArrayBufferView | ArrayBuffer): Uint8Array {\n  if (buffer instanceof Uint8Array) {\n    return buffer;\n  } else if (ArrayBuffer.isView(buffer)) {\n    return new Uint8Array(buffer.buffer, buffer.byteOffset, buffer.byteLength);\n  } else if (buffer instanceof ArrayBuffer) {\n    return new Uint8Array(buffer);\n  } else {\n    // ArrayLike<number>\n    return Uint8Array.from(buffer);\n  }\n}\n\nexport function createDataView(buffer: ArrayLike<number> | ArrayBufferView | ArrayBuffer): DataView {\n  if (buffer instanceof ArrayBuffer) {\n    return new DataView(buffer);\n  }\n\n  const bufferView = ensureUint8Array(buffer);\n  return new DataView(bufferView.buffer, bufferView.byteOffset, bufferView.byteLength);\n}\n", "import { utf8EncodeJs, utf8Count, TEXT_ENCODER_THRESHOLD, utf8EncodeTE } from \"./utils/utf8\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { setInt64, setUint64 } from \"./utils/int\";\nimport { ensureUint8Array } from \"./utils/typedArrays\";\nimport type { ExtData } from \"./ExtData\";\n\nexport const DEFAULT_MAX_DEPTH = 100;\nexport const DEFAULT_INITIAL_BUFFER_SIZE = 2048;\n\nexport class Encoder<ContextType = undefined> {\n  private pos = 0;\n  private view = new DataView(new ArrayBuffer(this.initialBufferSize));\n  private bytes = new Uint8Array(this.view.buffer);\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxDepth = DEFAULT_MAX_DEPTH,\n    private readonly initialBufferSize = DEFAULT_INITIAL_BUFFER_SIZE,\n    private readonly sortKeys = false,\n    private readonly forceFloat32 = false,\n    private readonly ignoreUndefined = false,\n    private readonly forceIntegerToFloat = false,\n  ) {}\n\n  private reinitializeState() {\n    this.pos = 0;\n  }\n\n  /**\n   * This is almost equivalent to {@link Encoder#encode}, but it returns an reference of the encoder's internal buffer and thus much faster than {@link Encoder#encode}.\n   *\n   * @returns Encodes the object and returns a shared reference the encoder's internal buffer.\n   */\n  public encodeSharedRef(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.subarray(0, this.pos);\n  }\n\n  /**\n   * @returns Encodes the object and returns a copy of the encoder's internal buffer.\n   */\n  public encode(object: unknown): Uint8Array {\n    this.reinitializeState();\n    this.doEncode(object, 1);\n    return this.bytes.slice(0, this.pos);\n  }\n\n  private doEncode(object: unknown, depth: number): void {\n    if (depth > this.maxDepth) {\n      throw new Error(`Too deep objects in depth ${depth}`);\n    }\n\n    if (object == null) {\n      this.encodeNil();\n    } else if (typeof object === \"boolean\") {\n      this.encodeBoolean(object);\n    } else if (typeof object === \"number\") {\n      this.encodeNumber(object);\n    } else if (typeof object === \"string\") {\n      this.encodeString(object);\n    } else {\n      this.encodeObject(object, depth);\n    }\n  }\n\n  private ensureBufferSizeToWrite(sizeToWrite: number) {\n    const requiredSize = this.pos + sizeToWrite;\n\n    if (this.view.byteLength < requiredSize) {\n      this.resizeBuffer(requiredSize * 2);\n    }\n  }\n\n  private resizeBuffer(newSize: number) {\n    const newBuffer = new ArrayBuffer(newSize);\n    const newBytes = new Uint8Array(newBuffer);\n    const newView = new DataView(newBuffer);\n\n    newBytes.set(this.bytes);\n\n    this.view = newView;\n    this.bytes = newBytes;\n  }\n\n  private encodeNil() {\n    this.writeU8(0xc0);\n  }\n\n  private encodeBoolean(object: boolean) {\n    if (object === false) {\n      this.writeU8(0xc2);\n    } else {\n      this.writeU8(0xc3);\n    }\n  }\n  private encodeNumber(object: number) {\n    if (Number.isSafeInteger(object) && !this.forceIntegerToFloat) {\n      if (object >= 0) {\n        if (object < 0x80) {\n          // positive fixint\n          this.writeU8(object);\n        } else if (object < 0x100) {\n          // uint 8\n          this.writeU8(0xcc);\n          this.writeU8(object);\n        } else if (object < 0x10000) {\n          // uint 16\n          this.writeU8(0xcd);\n          this.writeU16(object);\n        } else if (object < 0x100000000) {\n          // uint 32\n          this.writeU8(0xce);\n          this.writeU32(object);\n        } else {\n          // uint 64\n          this.writeU8(0xcf);\n          this.writeU64(object);\n        }\n      } else {\n        if (object >= -0x20) {\n          // negative fixint\n          this.writeU8(0xe0 | (object + 0x20));\n        } else if (object >= -0x80) {\n          // int 8\n          this.writeU8(0xd0);\n          this.writeI8(object);\n        } else if (object >= -0x8000) {\n          // int 16\n          this.writeU8(0xd1);\n          this.writeI16(object);\n        } else if (object >= -0x80000000) {\n          // int 32\n          this.writeU8(0xd2);\n          this.writeI32(object);\n        } else {\n          // int 64\n          this.writeU8(0xd3);\n          this.writeI64(object);\n        }\n      }\n    } else {\n      // non-integer numbers\n      if (this.forceFloat32) {\n        // float 32\n        this.writeU8(0xca);\n        this.writeF32(object);\n      } else {\n        // float 64\n        this.writeU8(0xcb);\n        this.writeF64(object);\n      }\n    }\n  }\n\n  private writeStringHeader(byteLength: number) {\n    if (byteLength < 32) {\n      // fixstr\n      this.writeU8(0xa0 + byteLength);\n    } else if (byteLength < 0x100) {\n      // str 8\n      this.writeU8(0xd9);\n      this.writeU8(byteLength);\n    } else if (byteLength < 0x10000) {\n      // str 16\n      this.writeU8(0xda);\n      this.writeU16(byteLength);\n    } else if (byteLength < 0x100000000) {\n      // str 32\n      this.writeU8(0xdb);\n      this.writeU32(byteLength);\n    } else {\n      throw new Error(`Too long string: ${byteLength} bytes in UTF-8`);\n    }\n  }\n\n  private encodeString(object: string) {\n    const maxHeaderSize = 1 + 4;\n    const strLength = object.length;\n\n    if (strLength > TEXT_ENCODER_THRESHOLD) {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeTE(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    } else {\n      const byteLength = utf8Count(object);\n      this.ensureBufferSizeToWrite(maxHeaderSize + byteLength);\n      this.writeStringHeader(byteLength);\n      utf8EncodeJs(object, this.bytes, this.pos);\n      this.pos += byteLength;\n    }\n  }\n\n  private encodeObject(object: unknown, depth: number) {\n    // try to encode objects with custom codec first of non-primitives\n    const ext = this.extensionCodec.tryToEncode(object, this.context);\n    if (ext != null) {\n      this.encodeExtension(ext);\n    } else if (Array.isArray(object)) {\n      this.encodeArray(object, depth);\n    } else if (ArrayBuffer.isView(object)) {\n      this.encodeBinary(object);\n    } else if (typeof object === \"object\") {\n      this.encodeMap(object as Record<string, unknown>, depth);\n    } else {\n      // symbol, function and other special object come here unless extensionCodec handles them.\n      throw new Error(`Unrecognized object: ${Object.prototype.toString.apply(object)}`);\n    }\n  }\n\n  private encodeBinary(object: ArrayBufferView) {\n    const size = object.byteLength;\n    if (size < 0x100) {\n      // bin 8\n      this.writeU8(0xc4);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // bin 16\n      this.writeU8(0xc5);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // bin 32\n      this.writeU8(0xc6);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large binary: ${size}`);\n    }\n    const bytes = ensureUint8Array(object);\n    this.writeU8a(bytes);\n  }\n\n  private encodeArray(object: Array<unknown>, depth: number) {\n    const size = object.length;\n    if (size < 16) {\n      // fixarray\n      this.writeU8(0x90 + size);\n    } else if (size < 0x10000) {\n      // array 16\n      this.writeU8(0xdc);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // array 32\n      this.writeU8(0xdd);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large array: ${size}`);\n    }\n    for (const item of object) {\n      this.doEncode(item, depth + 1);\n    }\n  }\n\n  private countWithoutUndefined(object: Record<string, unknown>, keys: ReadonlyArray<string>): number {\n    let count = 0;\n\n    for (const key of keys) {\n      if (object[key] !== undefined) {\n        count++;\n      }\n    }\n\n    return count;\n  }\n\n  private encodeMap(object: Record<string, unknown>, depth: number) {\n    const keys = Object.keys(object);\n    if (this.sortKeys) {\n      keys.sort();\n    }\n\n    const size = this.ignoreUndefined ? this.countWithoutUndefined(object, keys) : keys.length;\n\n    if (size < 16) {\n      // fixmap\n      this.writeU8(0x80 + size);\n    } else if (size < 0x10000) {\n      // map 16\n      this.writeU8(0xde);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // map 32\n      this.writeU8(0xdf);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large map object: ${size}`);\n    }\n\n    for (const key of keys) {\n      const value = object[key];\n\n      if (!(this.ignoreUndefined && value === undefined)) {\n        this.encodeString(key);\n        this.doEncode(value, depth + 1);\n      }\n    }\n  }\n\n  private encodeExtension(ext: ExtData) {\n    const size = ext.data.length;\n    if (size === 1) {\n      // fixext 1\n      this.writeU8(0xd4);\n    } else if (size === 2) {\n      // fixext 2\n      this.writeU8(0xd5);\n    } else if (size === 4) {\n      // fixext 4\n      this.writeU8(0xd6);\n    } else if (size === 8) {\n      // fixext 8\n      this.writeU8(0xd7);\n    } else if (size === 16) {\n      // fixext 16\n      this.writeU8(0xd8);\n    } else if (size < 0x100) {\n      // ext 8\n      this.writeU8(0xc7);\n      this.writeU8(size);\n    } else if (size < 0x10000) {\n      // ext 16\n      this.writeU8(0xc8);\n      this.writeU16(size);\n    } else if (size < 0x100000000) {\n      // ext 32\n      this.writeU8(0xc9);\n      this.writeU32(size);\n    } else {\n      throw new Error(`Too large extension object: ${size}`);\n    }\n    this.writeI8(ext.type);\n    this.writeU8a(ext.data);\n  }\n\n  private writeU8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setUint8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU8a(values: ArrayLike<number>) {\n    const size = values.length;\n    this.ensureBufferSizeToWrite(size);\n\n    this.bytes.set(values, this.pos);\n    this.pos += size;\n  }\n\n  private writeI8(value: number) {\n    this.ensureBufferSizeToWrite(1);\n\n    this.view.setInt8(this.pos, value);\n    this.pos++;\n  }\n\n  private writeU16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setUint16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeI16(value: number) {\n    this.ensureBufferSizeToWrite(2);\n\n    this.view.setInt16(this.pos, value);\n    this.pos += 2;\n  }\n\n  private writeU32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setUint32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeI32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n\n    this.view.setInt32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF32(value: number) {\n    this.ensureBufferSizeToWrite(4);\n    this.view.setFloat32(this.pos, value);\n    this.pos += 4;\n  }\n\n  private writeF64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n    this.view.setFloat64(this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeU64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setUint64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n\n  private writeI64(value: number) {\n    this.ensureBufferSizeToWrite(8);\n\n    setInt64(this.view, this.pos, value);\n    this.pos += 8;\n  }\n}\n", "import { Encoder } from \"./Encoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type EncodeOptions<ContextType = undefined> = Partial<\n  Readonly<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * The maximum depth in nested objects and arrays.\n     *\n     * Defaults to 100.\n     */\n    maxDepth: number;\n\n    /**\n     * The initial size of the internal buffer.\n     *\n     * Defaults to 2048.\n     */\n    initialBufferSize: number;\n\n    /**\n     * If `true`, the keys of an object is sorted. In other words, the encoded\n     * binary is canonical and thus comparable to another encoded binary.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    sortKeys: boolean;\n    /**\n     * If `true`, non-integer numbers are encoded in float32, not in float64 (the default).\n     *\n     * Only use it if precisions don't matter.\n     *\n     * Defaults to `false`.\n     */\n    forceFloat32: boolean;\n\n    /**\n     * If `true`, an object property with `undefined` value are ignored.\n     * e.g. `{ foo: undefined }` will be encoded as `{}`, as `JSON.stringify()` does.\n     *\n     * Defaults to `false`. If enabled, it spends more time in encoding objects.\n     */\n    ignoreUndefined: boolean;\n\n    /**\n     * If `true`, integer numbers are encoded as floating point numbers,\n     * with the `forceFloat32` option taken into account.\n     *\n     * Defaults to `false`.\n     */\n    forceIntegerToFloat: boolean;\n  }>\n> &\n  ContextOf<ContextType>;\n\nconst defaultEncodeOptions: EncodeOptions = {};\n\n/**\n * It encodes `value` in the MessagePack format and\n * returns a byte buffer.\n *\n * The returned buffer is a slice of a larger `ArrayBuffer`, so you have to use its `#byteOffset` and `#byteLength` in order to convert it to another typed arrays including NodeJS `Buffer`.\n */\nexport function encode<ContextType = undefined>(\n  value: unknown,\n  options: EncodeOptions<SplitUndefined<ContextType>> = defaultEncodeOptions as any,\n): Uint8Array {\n  const encoder = new Encoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxDepth,\n    options.initialBufferSize,\n    options.sortKeys,\n    options.forceFloat32,\n    options.ignoreUndefined,\n    options.forceIntegerToFloat,\n  );\n  return encoder.encodeSharedRef(value);\n}\n", "export function prettyByte(byte: number): string {\n  return `${byte < 0 ? \"-\" : \"\"}0x${Math.abs(byte).toString(16).padStart(2, \"0\")}`;\n}\n", "import { utf8DecodeJs } from \"./utils/utf8\";\n\nconst DEFAULT_MAX_KEY_LENGTH = 16;\nconst DEFAULT_MAX_LENGTH_PER_KEY = 16;\n\nexport interface KeyDecoder {\n  canBeCached(byteLength: number): boolean;\n  decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string;\n}\ninterface KeyCacheRecord {\n  readonly bytes: Uint8Array;\n  readonly str: string;\n}\n\nexport class CachedKeyDecoder implements KeyDecoder {\n  hit = 0;\n  miss = 0;\n  private readonly caches: Array<Array<KeyCacheRecord>>;\n\n  constructor(readonly maxKeyLength = DEFAULT_MAX_KEY_LENGTH, readonly maxLengthPerKey = DEFAULT_MAX_LENGTH_PER_KEY) {\n    // avoid `new Array(N)`, which makes a sparse array,\n    // because a sparse array is typically slower than a non-sparse array.\n    this.caches = [];\n    for (let i = 0; i < this.maxKeyLength; i++) {\n      this.caches.push([]);\n    }\n  }\n\n  public canBeCached(byteLength: number): boolean {\n    return byteLength > 0 && byteLength <= this.maxKeyLength;\n  }\n\n  private find(bytes: Uint8Array, inputOffset: number, byteLength: number): string | null {\n    const records = this.caches[byteLength - 1]!;\n\n    FIND_CHUNK: for (const record of records) {\n      const recordBytes = record.bytes;\n\n      for (let j = 0; j < byteLength; j++) {\n        if (recordBytes[j] !== bytes[inputOffset + j]) {\n          continue FIND_CHUNK;\n        }\n      }\n      return record.str;\n    }\n    return null;\n  }\n\n  private store(bytes: Uint8Array, value: string) {\n    const records = this.caches[bytes.length - 1]!;\n    const record: KeyCacheRecord = { bytes, str: value };\n\n    if (records.length >= this.maxLengthPerKey) {\n      // `records` are full!\n      // Set `record` to an arbitrary position.\n      records[(Math.random() * records.length) | 0] = record;\n    } else {\n      records.push(record);\n    }\n  }\n\n  public decode(bytes: Uint8Array, inputOffset: number, byteLength: number): string {\n    const cachedValue = this.find(bytes, inputOffset, byteLength);\n    if (cachedValue != null) {\n      this.hit++;\n      return cachedValue;\n    }\n    this.miss++;\n\n    const str = utf8DecodeJs(bytes, inputOffset, byteLength);\n    // Ensure to copy a slice of bytes because the byte may be NodeJS Buffer and Buffer#slice() returns a reference to its internal ArrayBuffer.\n    const slicedCopyOfBytes = Uint8Array.prototype.slice.call(bytes, inputOffset, inputOffset + byteLength);\n    this.store(slicedCopyOfBytes, str);\n    return str;\n  }\n}\n", "import { prettyByte } from \"./utils/prettyByte\";\nimport { ExtensionCodec, ExtensionCodecType } from \"./ExtensionCodec\";\nimport { getInt64, getUint64, UINT32_MAX } from \"./utils/int\";\nimport { utf8DecodeJs, TEXT_DECODER_THRESHOLD, utf8DecodeTD } from \"./utils/utf8\";\nimport { createDataView, ensureUint8Array } from \"./utils/typedArrays\";\nimport { CachedKeyDecoder, KeyDecoder } from \"./CachedKeyDecoder\";\nimport { DecodeError } from \"./DecodeError\";\n\nconst enum State {\n  ARRAY,\n  MAP_KEY,\n  MAP_VALUE,\n}\n\ntype MapKeyType = string | number;\n\nconst isValidMapKeyType = (key: unknown): key is MapKeyType => {\n  const keyType = typeof key;\n\n  return keyType === \"string\" || keyType === \"number\";\n};\n\ntype StackMapState = {\n  type: State.MAP_KEY | State.MAP_VALUE;\n  size: number;\n  key: MapKeyType | null;\n  readCount: number;\n  map: Record<string, unknown>;\n};\n\ntype StackArrayState = {\n  type: State.ARRAY;\n  size: number;\n  array: Array<unknown>;\n  position: number;\n};\n\ntype StackState = StackArrayState | StackMapState;\n\nconst HEAD_BYTE_REQUIRED = -1;\n\nconst EMPTY_VIEW = new DataView(new ArrayBuffer(0));\nconst EMPTY_BYTES = new Uint8Array(EMPTY_VIEW.buffer);\n\n// IE11: Hack to support IE11.\n// IE11: Drop this hack and just use RangeError when IE11 is obsolete.\nexport const DataViewIndexOutOfBoundsError: typeof Error = (() => {\n  try {\n    // IE11: The spec says it should throw RangeError,\n    // IE11: but in IE11 it throws TypeError.\n    EMPTY_VIEW.getInt8(0);\n  } catch (e: any) {\n    return e.constructor;\n  }\n  throw new Error(\"never reached\");\n})();\n\nconst MORE_DATA = new DataViewIndexOutOfBoundsError(\"Insufficient data\");\n\nconst sharedCachedKeyDecoder = new CachedKeyDecoder();\n\nexport class Decoder<ContextType = undefined> {\n  private totalPos = 0;\n  private pos = 0;\n\n  private view = EMPTY_VIEW;\n  private bytes = EMPTY_BYTES;\n  private headByte = HEAD_BYTE_REQUIRED;\n  private readonly stack: Array<StackState> = [];\n\n  public constructor(\n    private readonly extensionCodec: ExtensionCodecType<ContextType> = ExtensionCodec.defaultCodec as any,\n    private readonly context: ContextType = undefined as any,\n    private readonly maxStrLength = UINT32_MAX,\n    private readonly maxBinLength = UINT32_MAX,\n    private readonly maxArrayLength = UINT32_MAX,\n    private readonly maxMapLength = UINT32_MAX,\n    private readonly maxExtLength = UINT32_MAX,\n    private readonly keyDecoder: KeyDecoder | null = sharedCachedKeyDecoder,\n  ) {}\n\n  private reinitializeState() {\n    this.totalPos = 0;\n    this.headByte = HEAD_BYTE_REQUIRED;\n    this.stack.length = 0;\n\n    // view, bytes, and pos will be re-initialized in setBuffer()\n  }\n\n  private setBuffer(buffer: ArrayLike<number> | BufferSource): void {\n    this.bytes = ensureUint8Array(buffer);\n    this.view = createDataView(this.bytes);\n    this.pos = 0;\n  }\n\n  private appendBuffer(buffer: ArrayLike<number> | BufferSource) {\n    if (this.headByte === HEAD_BYTE_REQUIRED && !this.hasRemaining(1)) {\n      this.setBuffer(buffer);\n    } else {\n      const remainingData = this.bytes.subarray(this.pos);\n      const newData = ensureUint8Array(buffer);\n\n      // concat remainingData + newData\n      const newBuffer = new Uint8Array(remainingData.length + newData.length);\n      newBuffer.set(remainingData);\n      newBuffer.set(newData, remainingData.length);\n      this.setBuffer(newBuffer);\n    }\n  }\n\n  private hasRemaining(size: number) {\n    return this.view.byteLength - this.pos >= size;\n  }\n\n  private createExtraByteError(posToShow: number): Error {\n    const { view, pos } = this;\n    return new RangeError(`Extra ${view.byteLength - pos} of ${view.byteLength} byte(s) found at buffer[${posToShow}]`);\n  }\n\n  /**\n   * @throws {@link DecodeError}\n   * @throws {@link RangeError}\n   */\n  public decode(buffer: ArrayLike<number> | BufferSource): unknown {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    const object = this.doDecodeSync();\n    if (this.hasRemaining(1)) {\n      throw this.createExtraByteError(this.pos);\n    }\n    return object;\n  }\n\n  public *decodeMulti(buffer: ArrayLike<number> | BufferSource): Generator<unknown, void, unknown> {\n    this.reinitializeState();\n    this.setBuffer(buffer);\n\n    while (this.hasRemaining(1)) {\n      yield this.doDecodeSync();\n    }\n  }\n\n  public async decodeAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>): Promise<unknown> {\n    let decoded = false;\n    let object: unknown;\n    for await (const buffer of stream) {\n      if (decoded) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      try {\n        object = this.doDecodeSync();\n        decoded = true;\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n\n    if (decoded) {\n      if (this.hasRemaining(1)) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n      return object;\n    }\n\n    const { headByte, pos, totalPos } = this;\n    throw new RangeError(\n      `Insufficient data in parsing ${prettyByte(headByte)} at ${totalPos} (${pos} in the current buffer)`,\n    );\n  }\n\n  public decodeArrayStream(\n    stream: AsyncIterable<ArrayLike<number> | BufferSource>,\n  ): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, true);\n  }\n\n  public decodeStream(stream: AsyncIterable<ArrayLike<number> | BufferSource>): AsyncGenerator<unknown, void, unknown> {\n    return this.decodeMultiAsync(stream, false);\n  }\n\n  private async *decodeMultiAsync(stream: AsyncIterable<ArrayLike<number> | BufferSource>, isArray: boolean) {\n    let isArrayHeaderRequired = isArray;\n    let arrayItemsLeft = -1;\n\n    for await (const buffer of stream) {\n      if (isArray && arrayItemsLeft === 0) {\n        throw this.createExtraByteError(this.totalPos);\n      }\n\n      this.appendBuffer(buffer);\n\n      if (isArrayHeaderRequired) {\n        arrayItemsLeft = this.readArraySize();\n        isArrayHeaderRequired = false;\n        this.complete();\n      }\n\n      try {\n        while (true) {\n          yield this.doDecodeSync();\n          if (--arrayItemsLeft === 0) {\n            break;\n          }\n        }\n      } catch (e) {\n        if (!(e instanceof DataViewIndexOutOfBoundsError)) {\n          throw e; // rethrow\n        }\n        // fallthrough\n      }\n      this.totalPos += this.pos;\n    }\n  }\n\n  private doDecodeSync(): unknown {\n    DECODE: while (true) {\n      const headByte = this.readHeadByte();\n      let object: unknown;\n\n      if (headByte >= 0xe0) {\n        // negative fixint (111x xxxx) 0xe0 - 0xff\n        object = headByte - 0x100;\n      } else if (headByte < 0xc0) {\n        if (headByte < 0x80) {\n          // positive fixint (0xxx xxxx) 0x00 - 0x7f\n          object = headByte;\n        } else if (headByte < 0x90) {\n          // fixmap (1000 xxxx) 0x80 - 0x8f\n          const size = headByte - 0x80;\n          if (size !== 0) {\n            this.pushMapState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = {};\n          }\n        } else if (headByte < 0xa0) {\n          // fixarray (1001 xxxx) 0x90 - 0x9f\n          const size = headByte - 0x90;\n          if (size !== 0) {\n            this.pushArrayState(size);\n            this.complete();\n            continue DECODE;\n          } else {\n            object = [];\n          }\n        } else {\n          // fixstr (101x xxxx) 0xa0 - 0xbf\n          const byteLength = headByte - 0xa0;\n          object = this.decodeUtf8String(byteLength, 0);\n        }\n      } else if (headByte === 0xc0) {\n        // nil\n        object = null;\n      } else if (headByte === 0xc2) {\n        // false\n        object = false;\n      } else if (headByte === 0xc3) {\n        // true\n        object = true;\n      } else if (headByte === 0xca) {\n        // float 32\n        object = this.readF32();\n      } else if (headByte === 0xcb) {\n        // float 64\n        object = this.readF64();\n      } else if (headByte === 0xcc) {\n        // uint 8\n        object = this.readU8();\n      } else if (headByte === 0xcd) {\n        // uint 16\n        object = this.readU16();\n      } else if (headByte === 0xce) {\n        // uint 32\n        object = this.readU32();\n      } else if (headByte === 0xcf) {\n        // uint 64\n        object = this.readU64();\n      } else if (headByte === 0xd0) {\n        // int 8\n        object = this.readI8();\n      } else if (headByte === 0xd1) {\n        // int 16\n        object = this.readI16();\n      } else if (headByte === 0xd2) {\n        // int 32\n        object = this.readI32();\n      } else if (headByte === 0xd3) {\n        // int 64\n        object = this.readI64();\n      } else if (headByte === 0xd9) {\n        // str 8\n        const byteLength = this.lookU8();\n        object = this.decodeUtf8String(byteLength, 1);\n      } else if (headByte === 0xda) {\n        // str 16\n        const byteLength = this.lookU16();\n        object = this.decodeUtf8String(byteLength, 2);\n      } else if (headByte === 0xdb) {\n        // str 32\n        const byteLength = this.lookU32();\n        object = this.decodeUtf8String(byteLength, 4);\n      } else if (headByte === 0xdc) {\n        // array 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xdd) {\n        // array 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushArrayState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = [];\n        }\n      } else if (headByte === 0xde) {\n        // map 16\n        const size = this.readU16();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xdf) {\n        // map 32\n        const size = this.readU32();\n        if (size !== 0) {\n          this.pushMapState(size);\n          this.complete();\n          continue DECODE;\n        } else {\n          object = {};\n        }\n      } else if (headByte === 0xc4) {\n        // bin 8\n        const size = this.lookU8();\n        object = this.decodeBinary(size, 1);\n      } else if (headByte === 0xc5) {\n        // bin 16\n        const size = this.lookU16();\n        object = this.decodeBinary(size, 2);\n      } else if (headByte === 0xc6) {\n        // bin 32\n        const size = this.lookU32();\n        object = this.decodeBinary(size, 4);\n      } else if (headByte === 0xd4) {\n        // fixext 1\n        object = this.decodeExtension(1, 0);\n      } else if (headByte === 0xd5) {\n        // fixext 2\n        object = this.decodeExtension(2, 0);\n      } else if (headByte === 0xd6) {\n        // fixext 4\n        object = this.decodeExtension(4, 0);\n      } else if (headByte === 0xd7) {\n        // fixext 8\n        object = this.decodeExtension(8, 0);\n      } else if (headByte === 0xd8) {\n        // fixext 16\n        object = this.decodeExtension(16, 0);\n      } else if (headByte === 0xc7) {\n        // ext 8\n        const size = this.lookU8();\n        object = this.decodeExtension(size, 1);\n      } else if (headByte === 0xc8) {\n        // ext 16\n        const size = this.lookU16();\n        object = this.decodeExtension(size, 2);\n      } else if (headByte === 0xc9) {\n        // ext 32\n        const size = this.lookU32();\n        object = this.decodeExtension(size, 4);\n      } else {\n        throw new DecodeError(`Unrecognized type byte: ${prettyByte(headByte)}`);\n      }\n\n      this.complete();\n\n      const stack = this.stack;\n      while (stack.length > 0) {\n        // arrays and maps\n        const state = stack[stack.length - 1]!;\n        if (state.type === State.ARRAY) {\n          state.array[state.position] = object;\n          state.position++;\n          if (state.position === state.size) {\n            stack.pop();\n            object = state.array;\n          } else {\n            continue DECODE;\n          }\n        } else if (state.type === State.MAP_KEY) {\n          if (!isValidMapKeyType(object)) {\n            throw new DecodeError(\"The type of key must be string or number but \" + typeof object);\n          }\n          if (object === \"__proto__\") {\n            throw new DecodeError(\"The key __proto__ is not allowed\");\n          }\n\n          state.key = object;\n          state.type = State.MAP_VALUE;\n          continue DECODE;\n        } else {\n          // it must be `state.type === State.MAP_VALUE` here\n\n          state.map[state.key!] = object;\n          state.readCount++;\n\n          if (state.readCount === state.size) {\n            stack.pop();\n            object = state.map;\n          } else {\n            state.key = null;\n            state.type = State.MAP_KEY;\n            continue DECODE;\n          }\n        }\n      }\n\n      return object;\n    }\n  }\n\n  private readHeadByte(): number {\n    if (this.headByte === HEAD_BYTE_REQUIRED) {\n      this.headByte = this.readU8();\n      // console.log(\"headByte\", prettyByte(this.headByte));\n    }\n\n    return this.headByte;\n  }\n\n  private complete(): void {\n    this.headByte = HEAD_BYTE_REQUIRED;\n  }\n\n  private readArraySize(): number {\n    const headByte = this.readHeadByte();\n\n    switch (headByte) {\n      case 0xdc:\n        return this.readU16();\n      case 0xdd:\n        return this.readU32();\n      default: {\n        if (headByte < 0xa0) {\n          return headByte - 0x90;\n        } else {\n          throw new DecodeError(`Unrecognized array type byte: ${prettyByte(headByte)}`);\n        }\n      }\n    }\n  }\n\n  private pushMapState(size: number) {\n    if (size > this.maxMapLength) {\n      throw new DecodeError(`Max length exceeded: map length (${size}) > maxMapLengthLength (${this.maxMapLength})`);\n    }\n\n    this.stack.push({\n      type: State.MAP_KEY,\n      size,\n      key: null,\n      readCount: 0,\n      map: {},\n    });\n  }\n\n  private pushArrayState(size: number) {\n    if (size > this.maxArrayLength) {\n      throw new DecodeError(`Max length exceeded: array length (${size}) > maxArrayLength (${this.maxArrayLength})`);\n    }\n\n    this.stack.push({\n      type: State.ARRAY,\n      size,\n      array: new Array<unknown>(size),\n      position: 0,\n    });\n  }\n\n  private decodeUtf8String(byteLength: number, headerOffset: number): string {\n    if (byteLength > this.maxStrLength) {\n      throw new DecodeError(\n        `Max length exceeded: UTF-8 byte length (${byteLength}) > maxStrLength (${this.maxStrLength})`,\n      );\n    }\n\n    if (this.bytes.byteLength < this.pos + headerOffset + byteLength) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headerOffset;\n    let object: string;\n    if (this.stateIsMapKey() && this.keyDecoder?.canBeCached(byteLength)) {\n      object = this.keyDecoder.decode(this.bytes, offset, byteLength);\n    } else if (byteLength > TEXT_DECODER_THRESHOLD) {\n      object = utf8DecodeTD(this.bytes, offset, byteLength);\n    } else {\n      object = utf8DecodeJs(this.bytes, offset, byteLength);\n    }\n    this.pos += headerOffset + byteLength;\n    return object;\n  }\n\n  private stateIsMapKey(): boolean {\n    if (this.stack.length > 0) {\n      const state = this.stack[this.stack.length - 1]!;\n      return state.type === State.MAP_KEY;\n    }\n    return false;\n  }\n\n  private decodeBinary(byteLength: number, headOffset: number): Uint8Array {\n    if (byteLength > this.maxBinLength) {\n      throw new DecodeError(`Max length exceeded: bin length (${byteLength}) > maxBinLength (${this.maxBinLength})`);\n    }\n\n    if (!this.hasRemaining(byteLength + headOffset)) {\n      throw MORE_DATA;\n    }\n\n    const offset = this.pos + headOffset;\n    const object = this.bytes.subarray(offset, offset + byteLength);\n    this.pos += headOffset + byteLength;\n    return object;\n  }\n\n  private decodeExtension(size: number, headOffset: number): unknown {\n    if (size > this.maxExtLength) {\n      throw new DecodeError(`Max length exceeded: ext length (${size}) > maxExtLength (${this.maxExtLength})`);\n    }\n\n    const extType = this.view.getInt8(this.pos + headOffset);\n    const data = this.decodeBinary(size, headOffset + 1 /* extType */);\n    return this.extensionCodec.decode(data, extType, this.context);\n  }\n\n  private lookU8() {\n    return this.view.getUint8(this.pos);\n  }\n\n  private lookU16() {\n    return this.view.getUint16(this.pos);\n  }\n\n  private lookU32() {\n    return this.view.getUint32(this.pos);\n  }\n\n  private readU8(): number {\n    const value = this.view.getUint8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readI8(): number {\n    const value = this.view.getInt8(this.pos);\n    this.pos++;\n    return value;\n  }\n\n  private readU16(): number {\n    const value = this.view.getUint16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readI16(): number {\n    const value = this.view.getInt16(this.pos);\n    this.pos += 2;\n    return value;\n  }\n\n  private readU32(): number {\n    const value = this.view.getUint32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readI32(): number {\n    const value = this.view.getInt32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readU64(): number {\n    const value = getUint64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readI64(): number {\n    const value = getInt64(this.view, this.pos);\n    this.pos += 8;\n    return value;\n  }\n\n  private readF32() {\n    const value = this.view.getFloat32(this.pos);\n    this.pos += 4;\n    return value;\n  }\n\n  private readF64() {\n    const value = this.view.getFloat64(this.pos);\n    this.pos += 8;\n    return value;\n  }\n}\n", "import { Decoder } from \"./Decoder\";\nimport type { ExtensionCodecType } from \"./ExtensionCodec\";\nimport type { ContextOf, SplitUndefined } from \"./context\";\n\nexport type DecodeOptions<ContextType = undefined> = Readonly<\n  Partial<{\n    extensionCodec: ExtensionCodecType<ContextType>;\n\n    /**\n     * Maximum string length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxStrLength: number;\n    /**\n     * Maximum binary length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxBinLength: number;\n    /**\n     * Maximum array length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxArrayLength: number;\n    /**\n     * Maximum map length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxMapLength: number;\n    /**\n     * Maximum extension length.\n     *\n     * Defaults to 4_294_967_295 (UINT32_MAX).\n     */\n    maxExtLength: number;\n  }>\n> &\n  ContextOf<ContextType>;\n\nexport const defaultDecodeOptions: DecodeOptions = {};\n\n/**\n * It decodes a single MessagePack object in a buffer.\n *\n * This is a synchronous decoding function.\n * See other variants for asynchronous decoding: {@link decodeAsync()}, {@link decodeStream()}, or {@link decodeArrayStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decode<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): unknown {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decode(buffer);\n}\n\n/**\n * It decodes multiple MessagePack objects in a buffer.\n * This is corresponding to {@link decodeMultiStream()}.\n *\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMulti<ContextType = undefined>(\n  buffer: ArrayLike<number> | BufferSource,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Generator<unknown, void, unknown> {\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeMulti(buffer);\n}\n", "// utility for whatwg streams\n\n// The living standard of whatwg streams says\n// ReadableStream is also AsyncIterable, but\n// as of June 2019, no browser implements it.\n// See https://streams.spec.whatwg.org/ for details\nexport type ReadableStreamLike<T> = AsyncIterable<T> | ReadableStream<T>;\n\nexport function isAsyncIterable<T>(object: ReadableStreamLike<T>): object is AsyncIterable<T> {\n  return (object as any)[Symbol.asyncIterator] != null;\n}\n\nfunction assertNonNull<T>(value: T | null | undefined): asserts value is T {\n  if (value == null) {\n    throw new Error(\"Assertion Failure: value must not be null nor undefined\");\n  }\n}\n\nexport async function* asyncIterableFromStream<T>(stream: ReadableStream<T>): AsyncIterable<T> {\n  const reader = stream.getReader();\n\n  try {\n    while (true) {\n      const { done, value } = await reader.read();\n      if (done) {\n        return;\n      }\n      assertNonNull(value);\n      yield value;\n    }\n  } finally {\n    reader.releaseLock();\n  }\n}\n\nexport function ensureAsyncIterable<T>(streamLike: ReadableStreamLike<T>): AsyncIterable<T> {\n  if (isAsyncIterable(streamLike)) {\n    return streamLike;\n  } else {\n    return asyncIterableFromStream(streamLike);\n  }\n}\n", "import { Decoder } from \"./Decoder\";\nimport { ensureAsyncIterable } from \"./utils/stream\";\nimport { defaultDecodeOptions } from \"./decode\";\nimport type { ReadableStreamLike } from \"./utils/stream\";\nimport type { DecodeOptions } from \"./decode\";\nimport type { SplitUndefined } from \"./context\";\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export async function decodeAsync<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): Promise<unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n  return decoder.decodeAsync(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\n export function decodeArrayStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeArrayStream(stream);\n}\n\n/**\n * @throws {@link RangeError} if the buffer is incomplete, including the case where the buffer is empty.\n * @throws {@link DecodeError} if the buffer contains invalid data.\n */\nexport function decodeMultiStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  const stream = ensureAsyncIterable(streamLike);\n\n  const decoder = new Decoder(\n    options.extensionCodec,\n    (options as typeof options & { context: any }).context,\n    options.maxStrLength,\n    options.maxBinLength,\n    options.maxArrayLength,\n    options.maxMapLength,\n    options.maxExtLength,\n  );\n\n  return decoder.decodeStream(stream);\n}\n\n/**\n * @deprecated Use {@link decodeMultiStream()} instead.\n */\nexport function decodeStream<ContextType>(\n  streamLike: ReadableStreamLike<ArrayLike<number> | BufferSource>,\n  options: DecodeOptions<SplitUndefined<ContextType>> = defaultDecodeOptions as any,\n): AsyncGenerator<unknown, void, unknown> {\n  return decodeMultiStream(streamLike, options);\n}\n", "// Main Functions:\n\nimport { encode } from \"./encode\";\nexport { encode };\nimport type { EncodeOptions } from \"./encode\";\nexport type { EncodeOptions };\n\nimport { decode, decodeMulti } from \"./decode\";\nexport { decode, decodeMulti };\nimport type { DecodeOptions } from \"./decode\";\nexport { DecodeOptions };\n\nimport { decodeAsync, decodeArrayStream, decodeMultiStream, decodeStream } from \"./decodeAsync\";\nexport { decodeAsync, decodeArrayStream, decodeMultiStream, decodeStream };\n\nimport { Decoder, DataViewIndexOutOfBoundsError } from \"./Decoder\";\nimport { DecodeError } from \"./DecodeError\";\nexport { Decoder, DecodeError, DataViewIndexOutOfBoundsError };\n\nimport { Encoder } from \"./Encoder\";\nexport { Encoder };\n\n// Utilitiies for Extension Types:\n\nimport { ExtensionCodec } from \"./ExtensionCodec\";\nexport { ExtensionCodec };\nimport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType } from \"./ExtensionCodec\";\nexport type { ExtensionCodecType, ExtensionDecoderType, ExtensionEncoderType };\nimport { ExtData } from \"./ExtData\";\nexport { ExtData };\n\nimport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n} from \"./timestamp\";\nexport {\n  EXT_TIMESTAMP,\n  encodeDateToTimeSpec,\n  encodeTimeSpecToTimestamp,\n  decodeTimestampToTimeSpec,\n  encodeTimestampExtension,\n  decodeTimestampExtension,\n};\n", "/**\r\n * Custom Error classes that shall be raised by webR.\r\n * @module Error\r\n */\r\n\r\n/**\r\n * A general error raised by webR.\r\n */\r\nexport class WebRError extends Error {\r\n  constructor(msg: string) {\r\n    super(msg);\r\n    this.name = this.constructor.name;\r\n    Object.setPrototypeOf(this, new.target.prototype);\r\n  }\r\n}\r\n\r\n/**\r\n * Exceptions raised on the webR worker thread that have been forwarded to the\r\n * main thread through the communication channel.\r\n */\r\nexport class WebRWorkerError extends WebRError { }\r\n\r\n/**\r\n * Exceptions related to issues with the webR communication channel.\r\n */\r\nexport class WebRChannelError extends WebRError { }\r\n\r\n/**\r\n * Exceptions related to issues with webR object payloads.\r\n */\r\nexport class WebRPayloadError extends WebRError { }\r\n", "import { WebRError } from './error';\r\n\r\ninterface Process {\r\n  browser: string | undefined;\r\n  release: { [key: string]: string };\r\n}\r\ndeclare let process: Process;\r\n\r\nexport const IN_NODE =\r\n  typeof process !== 'undefined' &&\r\n  process.release &&\r\n  process.release.name === 'node';\r\n\r\n// Adapted from https://github.com/pyodide/pyodide/blob/main/src/js/compat.ts\r\nexport let loadScript: (url: string) => Promise<void>;\r\nif (globalThis.document) {\r\n  loadScript = (url) =>\r\n    new Promise((resolve, reject) => {\r\n      const script = document.createElement('script');\r\n      script.src = url;\r\n      script.onload = () => resolve();\r\n      script.onerror = reject;\r\n      document.head.appendChild(script);\r\n    });\r\n} else if (globalThis.importScripts) {\r\n  loadScript = async (url) => {\r\n    try {\r\n      globalThis.importScripts(url);\r\n    } catch (e) {\r\n      if (e instanceof TypeError) {\r\n        await import(url);\r\n      } else {\r\n        throw e;\r\n      }\r\n    }\r\n  };\r\n} else if (IN_NODE) {\r\n  loadScript = async (url: string) => {\r\n    const nodePathMod = (await import('path')).default;\r\n    await import(nodePathMod.resolve(url));\r\n  };\r\n} else {\r\n  throw new WebRError('Cannot determine runtime environment');\r\n}\r\n", "/**\r\n * Common module for working with R objects.\r\n * @module RObject\r\n */\r\nimport * as RMain from './robj-main';\r\nimport * as RWorker from './robj-worker';\r\n\r\nexport type RPtr = number;\r\n\r\nexport const RTypeMap = {\r\n  null: 0,\r\n  symbol: 1,\r\n  pairlist: 2,\r\n  closure: 3,\r\n  environment: 4,\r\n  promise: 5,\r\n  call: 6,\r\n  special: 7,\r\n  builtin: 8,\r\n  string: 9,\r\n  logical: 10,\r\n  integer: 13,\r\n  double: 14,\r\n  complex: 15,\r\n  character: 16,\r\n  dots: 17,\r\n  any: 18,\r\n  list: 19,\r\n  expression: 20,\r\n  bytecode: 21,\r\n  pointer: 22,\r\n  weakref: 23,\r\n  raw: 24,\r\n  s4: 25,\r\n  new: 30,\r\n  free: 31,\r\n  function: 99,\r\n} as const;\r\nexport type RType = keyof typeof RTypeMap;\r\nexport type RTypeNumber = typeof RTypeMap[RType];\r\n\r\n/** @internal */\r\nexport type RCtor = 'object' | 'dataframe';\r\n\r\nexport type Complex = {\r\n  re: number;\r\n  im: number;\r\n};\r\n\r\nexport type WebRDataRaw =\r\n  | number\r\n  | string\r\n  | boolean\r\n  | undefined\r\n  | null\r\n  | void\r\n  | Complex\r\n  | Error\r\n  | ArrayBuffer\r\n  | ArrayBufferView\r\n  | ImageBitmap\r\n  | Array<WebRDataRaw>\r\n  | Map<WebRDataRaw, WebRDataRaw>\r\n  | Set<WebRDataRaw>\r\n  | { [key: string]: WebRDataRaw };\r\n\r\nexport type NamedEntries<T> = [string | null, T][];\r\nexport type NamedObject<T> = { [key: string]: T };\r\n\r\n/**\r\n * A union of JavaScript types that are able to be converted into an R object.\r\n *\r\n * `WebRData` is used both as a general input argument for R object construction\r\n * and also as a general return type when converting R objects into JavaScript.\r\n *\r\n */\r\nexport type WebRData =\r\n  | RMain.RObject\r\n  | RWorker.RObjectBase\r\n  | RWorker.RObject\r\n  | WebRDataRaw\r\n  | WebRDataJs\r\n  | WebRData[]\r\n  | ArrayBuffer\r\n  | ArrayBufferView\r\n  | { [key: string]: WebRData };\r\n\r\n/**\r\n * A subset of {@link WebRData} for JavaScript objects that can be converted\r\n * into R atomic vectors.\r\n * @typeParam T The JavaScript scalar type associated with the atomic vector.\r\n */\r\nexport type WebRDataAtomic<T> =\r\n  | WebRDataScalar<T>\r\n  | WebRDataJsAtomic<T>\r\n  | NamedObject<T | null>\r\n  | ([T] extends [number] ? ArrayBuffer | ArrayBufferView | (number | null)[] : (T | null)[]);\r\n\r\n/**\r\n * `WebRDataJs` objects form a tree structure, used when serialising R objects\r\n * into a JavaScript representation.\r\n *\r\n * Nested R objects are serialised using the {@link WebRDataJsNode} type,\r\n * forming branches in the resulting tree structure, with leaves formed by the\r\n * remaining types.\r\n */\r\nexport type WebRDataJs =\r\n  | WebRDataJsNull\r\n  | WebRDataJsString\r\n  | WebRDataJsSymbol\r\n  | WebRDataJsNode\r\n  | WebRDataJsAtomic<RWorker.atomicType>;\r\n\r\nexport type WebRDataJsNull = {\r\n  type: 'null';\r\n};\r\n\r\nexport type WebRDataJsString = {\r\n  type: 'string';\r\n  value: string;\r\n};\r\n\r\nexport type WebRDataJsSymbol = {\r\n  type: 'symbol';\r\n  printname: string | null;\r\n  symvalue: RPtr | null;\r\n  internal: RPtr | null;\r\n};\r\n\r\nexport type WebRDataJsNode = {\r\n  type: 'list' | 'pairlist' | 'environment';\r\n  names: (string | null)[] | null;\r\n  values: (WebRDataRaw | RWorker.RObject | RMain.RObject | WebRDataJs)[];\r\n};\r\n\r\nexport type WebRDataJsAtomic<T> = {\r\n  type: 'logical' | 'integer' | 'double' | 'complex' | 'character' | 'raw';\r\n  names: (string | null)[] | null;\r\n  values: (T | null)[];\r\n};\r\n\r\n/**\r\n * Test for a {@link WebRDataJs} instance.\r\n * @param {any} value The object to test.\r\n * @returns {boolean} True if the object is an instance of a {@link WebRDataJs}.\r\n */\r\nexport function isWebRDataJs(value: any): value is WebRDataJs {\r\n  return !!value && typeof value === 'object'\r\n    && Object.keys(RTypeMap).includes(value.type as string);\r\n}\r\n\r\n/**\r\n * A subset of WebRData for scalar JavaScript objects.\r\n */\r\nexport type WebRDataScalar<T> = T | RMain.RObject | RWorker.RObjectBase;\r\n\r\n/**\r\n * Test if an object is of type {@link Complex}.\r\n * @param {any} value The object to test.\r\n * @returns {boolean} True if the object is of type {@link Complex}.\r\n */\r\nexport function isComplex(value: any): value is Complex {\r\n  return !!value && typeof value === 'object' && 're' in value && 'im' in value;\r\n}\r\n", "import type { RPtr, RTypeNumber } from './robj';\r\nimport type { RObject, RList } from './robj-worker';\r\nimport type { EvalROptions } from './webr-chan';\r\nimport type { UnwindProtectException } from './utils-r';\r\nimport type { ChannelWorker } from './chan/channel';\r\nimport type { FSMountOptions } from './webr-main';\r\n\r\nexport interface Module extends EmscriptenModule {\r\n  /* Add mkdirTree to FS namespace, missing from @types/emscripten at the\r\n   * time of writing.\r\n   */\r\n  FS: typeof FS & {\r\n    _mount: typeof FS.mount;\r\n    mkdirTree(path: string): void;\r\n    filesystems: {\r\n      [key: string]: Emscripten.FileSystemType;\r\n    }\r\n  };\r\n  ENV: { [key: string]: string };\r\n  GOT: {\r\n    [key: string]: { required: boolean; value: number };\r\n  }\r\n  createLazyFilesystem: () => void;\r\n  monitorRunDependencies: (n: number) => void;\r\n  noImageDecoding: boolean;\r\n  noAudioDecoding: boolean;\r\n  noWasmDecoding: boolean;\r\n  downloadFileContent: (\r\n    URL: string,\r\n    headers?: Array<string>\r\n  ) => {\r\n    status: number;\r\n    response: string | ArrayBuffer;\r\n  };\r\n  mountImageUrl: (url: string, mountpoint: string) => void;\r\n  mountImagePath: (path: string, mountpoint: string) => void;\r\n  mountDriveFS: (mountpoint: string, options: FSMountOptions<'DRIVEFS'>) => void;\r\n  // Exported Emscripten JS API\r\n  allocateUTF8: typeof allocateUTF8;\r\n  allocateUTF8OnStack: typeof allocateUTF8OnStack;\r\n  getValue: typeof getValue;\r\n  setValue: typeof setValue;\r\n  UTF8ToString: typeof UTF8ToString;\r\n  callMain: (args: string[]) => void;\r\n  getWasmTableEntry: (entry: number) => (...args: any[]) => RPtr;\r\n  // R symbols from Rinternals.h\r\n  _ATTRIB: (ptr: RPtr) => RPtr;\r\n  _CAR: (ptr: RPtr) => RPtr;\r\n  _CDR: (ptr: RPtr) => RPtr;\r\n  _CLOENV: (ptr: RPtr) => RPtr;\r\n  _COMPLEX: (ptr: RPtr) => RPtr;\r\n  _FRAME: (ptr: RPtr) => RPtr;\r\n  _INTEGER: (ptr: RPtr) => RPtr;\r\n  _INTERNAL: (ptr: RPtr) => RPtr;\r\n  _LENGTH: (ptr: RPtr) => number;\r\n  _LOGICAL: (ptr: RPtr) => RPtr;\r\n  _PRINTNAME: (ptr: RPtr) => RPtr;\r\n  _R_CHAR: (ptr: RPtr) => RPtr;\r\n  _RAW: (ptr: RPtr) => RPtr;\r\n  _REAL: (ptr: RPtr) => RPtr;\r\n  _SETCAR: (x: RPtr, y: RPtr) => void;\r\n  _STRING_ELT: (ptr: RPtr, idx: number) => RPtr;\r\n  _STRING_PTR: (ptr: RPtr) => RPtr;\r\n  _SYMVALUE: (ptr: RPtr) => RPtr;\r\n  _TAG: (ptr: RPtr) => RPtr;\r\n  _TYPEOF: (ptr: RPtr) => RPtr;\r\n  _VECTOR_ELT: (ptr: RPtr, idx: number) => RPtr;\r\n  _R_lsInternal3: (env: RPtr, all: number, sorted: number) => RPtr;\r\n  _R_MakeExternalPtr: (p: number, tag: RPtr, prot: RPtr) => RPtr;\r\n  _R_NewEnv: (enclos: RPtr, hash: number, size: number) => RPtr;\r\n  _R_ParseEvalString: (code: number, env: RPtr) => RPtr;\r\n  _R_PreserveObject: (ptr: RPtr) => void;\r\n  _R_ReleaseObject: (ptr: RPtr) => void;\r\n  _R_ReplDLLinit: () => void;\r\n  _R_ReplDLLdo1: () => number;\r\n  _Rf_ScalarReal: (n: number) => RPtr;\r\n  _Rf_ScalarLogical: (l: number) => RPtr;\r\n  _Rf_ScalarInteger: (n: number) => RPtr;\r\n  _Rf_ScalarString: (s: string) => RPtr;\r\n  _Rf_allocList: (len: number) => RPtr;\r\n  _Rf_allocVector: (type: RTypeNumber, len: number) => RPtr;\r\n  _Rf_defineVar: (symbol: RPtr, value: RPtr, env: RPtr) => void;\r\n  _Rf_error: (msg: EmPtr) => void;\r\n  _Rf_eval: (call: RPtr, env: RPtr) => RPtr;\r\n  _Rf_findVarInFrame: (rho: RPtr, symbol: RPtr) => RPtr;\r\n  _Rf_listAppend: (source: RPtr, target: RPtr) => RPtr;\r\n  _Rf_getAttrib: (ptr1: RPtr, ptr2: RPtr) => RPtr;\r\n  _Rf_initialize_R: (argc: number, argv: RPtr) => void;\r\n  _Rf_install: (ptr: number) => RPtr;\r\n  _Rf_installTrChar: (name: RPtr) => RPtr;\r\n  _Rf_lang1: (ptr1: RPtr) => RPtr;\r\n  _Rf_lang2: (ptr1: RPtr, ptr2: RPtr) => RPtr;\r\n  _Rf_lang3: (ptr1: RPtr, ptr2: RPtr, ptr3: RPtr) => RPtr;\r\n  _Rf_lang4: (ptr1: RPtr, ptr2: RPtr, ptr3: RPtr, ptr4: RPtr) => RPtr;\r\n  _Rf_lang5: (ptr1: RPtr, ptr2: RPtr, ptr3: RPtr, ptr4: RPtr, ptr5: RPtr) => RPtr;\r\n  _Rf_lang6: (ptr1: RPtr, ptr2: RPtr, ptr3: RPtr, ptr4: RPtr, ptr5: RPtr, ptr6: RPtr) => RPtr;\r\n  _Rf_mkChar: (string: number) => RPtr;\r\n  _Rf_mkCharCE: (string: number, encoding: number) => RPtr;\r\n  _Rf_mkString: (ptr: number) => RPtr;\r\n  _Rf_onintr: () => void;\r\n  _Rf_protect: (ptr: RPtr) => RPtr;\r\n  _Rf_translateCharUTF8: (ptr: RPtr) => RPtr;\r\n  _R_ContinueUnwind: (cont: RPtr) => never;\r\n  _R_ProtectWithIndex: (ptr1: RPtr, ptr2: RPtr) => void;\r\n  _R_Reprotect: (ptr1: RPtr, ptr2: RPtr) => void;\r\n  _Rf_setAttrib: (ptr1: RPtr, ptr2: RPtr, ptr3: RPtr) => RPtr;\r\n  _Rf_unprotect: (n: number) => void;\r\n  _Rf_unprotect_ptr: (ptr: RPtr) => void;\r\n  _DLLbuf: RPtr;\r\n  _DLLbufp: RPtr;\r\n  _R_BaseEnv: RPtr;\r\n  _R_BracketSymbol: RPtr;\r\n  _R_Bracket2Symbol: RPtr;\r\n  _R_DollarSymbol: RPtr;\r\n  _R_EmptyEnv: RPtr;\r\n  _R_FalseValue: RPtr;\r\n  _R_GlobalEnv: RPtr;\r\n  _R_Interactive: RPtr;\r\n  _R_NaInt: RPtr;\r\n  _R_NaReal: RPtr;\r\n  _R_NaString: RPtr;\r\n  _R_LogicalNAValue: RPtr;\r\n  _R_NilValue: RPtr;\r\n  _R_TrueValue: RPtr;\r\n  _R_NamesSymbol: RPtr;\r\n  _R_UnboundValue: RPtr;\r\n  _SET_STRING_ELT: (ptr: RPtr, idx: number, val: RPtr) => void;\r\n  _SET_VECTOR_ELT: (ptr: RPtr, idx: number, val: RPtr) => void;\r\n  _setup_Rmainloop: () => void;\r\n  _strcpy: (dest: RPtr, src: RPtr) => number;\r\n  _vmaxget: () => number;\r\n  _vmaxset: (ptr: number) => void;\r\n  // TODO: Namespace all webR properties\r\n  webr: {\r\n    UnwindProtectException: typeof UnwindProtectException;\r\n    channel: ChannelWorker | undefined,\r\n    canvas: {\r\n      [key: number]: {\r\n        ctx: OffscreenCanvasRenderingContext2D;\r\n        offscreen: OffscreenCanvas;\r\n        transmit: boolean;\r\n      };\r\n    };\r\n    readConsole: () => number;\r\n    setPrompt: (prompt: string) => void;\r\n    resolveInit: () => void;\r\n    handleEvents: () => void;\r\n    dataViewer: (data: RPtr, title: string) => void;\r\n    evalJs: (code: RPtr) => unknown;\r\n    evalR: (expr: string | RObject, options?: EvalROptions) => RObject;\r\n    captureR: (expr: string | RObject, options: EvalROptions) => {\r\n      result: RObject,\r\n      output: RList,\r\n      images: ImageBitmap[],\r\n    };\r\n    setTimeoutWasm: (ptr: EmPtr, data: EmPtr, delay: number) => void;\r\n  };\r\n}\r\n\r\nexport const Module = {} as Module;\r\n\r\nexport type EmPtr = ReturnType<typeof Module.allocateUTF8>;\r\n\r\nexport interface DictEmPtrs {\r\n  [key: string]: EmPtr;\r\n}\r\n\r\nexport function dictEmFree(dict: { [key: string | number]: EmPtr }) {\r\n  Object.keys(dict).forEach((key) => Module._free(dict[key]));\r\n}\r\n", "import { Module, DictEmPtrs, dictEmFree } from './emscripten';\r\nimport { WebRData, RPtr } from './robj';\r\nimport { RObject, REnvironment, RHandle, handlePtr } from './robj-worker';\r\n\r\nexport function protect<T extends RHandle>(x: T): T {\r\n  Module._Rf_protect(handlePtr(x));\r\n  return x;\r\n}\r\n\r\nexport function protectInc<T extends RHandle>(x: T, prot: { n: number }): T {\r\n  Module._Rf_protect(handlePtr(x));\r\n  ++prot.n;\r\n  return x;\r\n}\r\n\r\nexport function protectWithIndex(x: RHandle): { loc: number; ptr: RPtr } {\r\n  // Integer size hardcoded to 4 bytes. This is fine but is there a\r\n  // way to call sizeof?\r\n  const pLoc = Module._malloc(4);\r\n\r\n  Module._R_ProtectWithIndex(handlePtr(x), pLoc);\r\n  const loc = Module.getValue(pLoc, 'i32');\r\n\r\n  return { loc: loc, ptr: pLoc };\r\n}\r\n\r\nexport function unprotectIndex(index: { ptr: RPtr }): void {\r\n  Module._Rf_unprotect(1);\r\n  Module._free(index.ptr);\r\n}\r\n\r\nexport function reprotect<T extends RHandle>(x: T, index: { loc: number; ptr: RPtr }): T {\r\n  Module._R_Reprotect(handlePtr(x), index.loc);\r\n  return x;\r\n}\r\n\r\nexport function unprotect(n: number) {\r\n  Module._Rf_unprotect(n);\r\n}\r\n\r\n// rlang convention: `env`-prefixed functions consistently take `env`\r\n// as first argument\r\nexport function envPoke(env: RHandle, sym: RHandle, value: RHandle) {\r\n  Module._Rf_defineVar(handlePtr(sym), handlePtr(value), handlePtr(env));\r\n}\r\n\r\nexport function parseEvalBare(code: string, env: WebRData): RObject {\r\n  const strings: DictEmPtrs = {};\r\n  const prot = { n: 0 };\r\n\r\n  try {\r\n    const envObj = new REnvironment(env);\r\n    protectInc(envObj, prot);\r\n\r\n    strings.code = Module.allocateUTF8(code);\r\n\r\n    const out = Module._R_ParseEvalString(strings.code, envObj.ptr);\r\n    return RObject.wrap(out);\r\n  } finally {\r\n    dictEmFree(strings);\r\n    unprotect(prot.n);\r\n  }\r\n}\r\n\r\nexport class UnwindProtectException extends Error {\r\n  cont: RPtr;\r\n  constructor(message: string, cont: RPtr) {\r\n    super(message);\r\n    this.name = 'UnwindProtectException';\r\n    this.cont = cont;\r\n  }\r\n}\r\n\r\nexport function safeEval(call: RHandle, env: RHandle): RPtr {\r\n  return Module.getWasmTableEntry(Module.GOT.ffi_safe_eval.value)(\r\n    handlePtr(call),\r\n    handlePtr(env)\r\n  );\r\n}\r\n", "/**\r\n * Module for working with R objects on the worker thead.\r\n * @module RWorker\r\n */\r\nimport { Module } from './emscripten';\r\nimport { Complex, isComplex, NamedEntries, NamedObject, WebRDataRaw, WebRDataScalar } from './robj';\r\nimport { WebRData, WebRDataAtomic, RPtr, RType, RTypeMap, RTypeNumber, RCtor } from './robj';\r\nimport { isWebRDataJs, WebRDataJs, WebRDataJsAtomic, WebRDataJsNode } from './robj';\r\nimport { WebRDataJsNull, WebRDataJsString, WebRDataJsSymbol } from './robj';\r\nimport { isSimpleObject } from './utils';\r\nimport { envPoke, parseEvalBare, protect, protectInc, unprotect } from './utils-r';\r\nimport { protectWithIndex, reprotect, unprotectIndex, safeEval } from './utils-r';\r\nimport { EvalROptions, ShelterID, isShelterID } from './webr-chan';\r\n\r\nexport type RHandle = RObject | RPtr;\r\n\r\nexport function handlePtr(x: RHandle): RPtr {\r\n  if (isRObject(x)) {\r\n    return x.ptr;\r\n  } else {\r\n    return x;\r\n  }\r\n}\r\n\r\n// Throw if an R object does not match a certain R type\r\nfunction assertRType(obj: RObjectBase, type: RType) {\r\n  if (Module._TYPEOF(obj.ptr) !== RTypeMap[type]) {\r\n    throw new Error(`Unexpected object type \"${obj.type()}\" when expecting type \"${type}\"`);\r\n  }\r\n}\r\n\r\n// TODO: Shelter should be a dictionary not an array\r\nexport const shelters = new Map<ShelterID, RPtr[]>();\r\n\r\n// Use this for implicit protection of objects sent to the main\r\n// thread. Currently uses the precious list but could use a different\r\n// mechanism in the future. Unprotection is explicit through\r\n// `Shelter.destroy()`.\r\nexport function keep(shelter: ShelterID, x: RHandle) {\r\n  const ptr = handlePtr(x);\r\n  Module._R_PreserveObject(ptr);\r\n\r\n  // TODO: Remove when shelter transition is complete\r\n  if (shelter === undefined) {\r\n    return;\r\n  }\r\n\r\n  if (isShelterID(shelter)) {\r\n    shelters.get(shelter)!.push(ptr);\r\n    return;\r\n  }\r\n\r\n  throw new Error('Unexpected shelter type ' + typeof shelter);\r\n}\r\n\r\n// Frees objects preserved with `keep()`. This method is called by\r\n// users in the main thread to release objects that were automatically\r\n// protected before being sent away.\r\nexport function destroy(shelter: ShelterID, x: RHandle) {\r\n  const ptr = handlePtr(x);\r\n  Module._R_ReleaseObject(ptr);\r\n\r\n  const objs: RPtr[] = shelters.get(shelter)!;\r\n  const loc = objs.indexOf(ptr);\r\n\r\n  if (loc < 0) {\r\n    throw new Error(\"Can't find object in shelter.\");\r\n  }\r\n\r\n  objs.splice(loc, 1);\r\n}\r\n\r\nexport function purge(shelter: ShelterID) {\r\n  const ptrs: RPtr[] = shelters.get(shelter)!;\r\n\r\n  for (const ptr of ptrs) {\r\n    try {\r\n      Module._R_ReleaseObject(ptr);\r\n    } catch (e) {\r\n      console.error(e);\r\n    }\r\n  }\r\n\r\n  shelters.set(shelter, []);\r\n}\r\n\r\nexport interface ToJsOptions {\r\n  depth: number;\r\n}\r\n\r\nexport type Nullable<T> = T | RNull;\r\n\r\nfunction newObjectFromData(obj: WebRData): RObject {\r\n  // Conversion of WebRDataJs type JS objects\r\n  if (isWebRDataJs(obj)) {\r\n    return new (getRWorkerClass(obj.type))(obj);\r\n  }\r\n\r\n  // Map JS's 'undefined' type to R's NULL object\r\n  if (typeof obj == 'undefined') {\r\n    return new RNull();\r\n  }\r\n\r\n  // Conversion of explicit R NULL value\r\n  if (obj && typeof obj === 'object' && 'type' in obj && obj.type === 'null') {\r\n    return new RNull();\r\n  }\r\n\r\n  // Direct conversion of scalar JS values\r\n  if (obj === null) {\r\n    return new RLogical({ type: 'logical', names: null, values: [null] });\r\n  }\r\n  if (typeof obj === 'boolean') {\r\n    return new RLogical(obj);\r\n  }\r\n  if (typeof obj === 'number') {\r\n    return new RDouble(obj);\r\n  }\r\n  if (typeof obj === 'string') {\r\n    return new RCharacter(obj);\r\n  }\r\n  if (isComplex(obj)) {\r\n    return new RComplex(obj);\r\n  }\r\n\r\n  // Conversion of composite JS objects\r\n  if (ArrayBuffer.isView(obj) || obj instanceof ArrayBuffer) {\r\n    return new RRaw(obj);\r\n  }\r\n  if (Array.isArray(obj)) {\r\n    return newObjectFromArray(obj);\r\n  }\r\n  // Any other JS object shape is reserved for creating an R `data.frame`\r\n  if (typeof obj === 'object') {\r\n    return RDataFrame.fromObject(obj);\r\n  }\r\n\r\n  throw new Error('R object construction for this JS object is not yet supported.');\r\n}\r\n\r\nfunction newObjectFromArray(arr: WebRData[]): RObject {\r\n  const prot = { n: 0 };\r\n\r\n  // Is this a D3 formatted data frame?\r\n  const hasObjects = arr.every((v) => v && typeof v === 'object' && !isRObject(v) && !isComplex(v));\r\n  if (hasObjects) {\r\n    const _arr = arr as { [key: string]: WebRData }[];\r\n    const isConsistent = _arr.every((a) => {\r\n      return Object.keys(a).filter((k) => !Object.keys(_arr[0]).includes(k)).length === 0 &&\r\n        Object.keys(_arr[0]).filter((k) => !Object.keys(a).includes(k)).length === 0;\r\n    });\r\n    const isAtomic = _arr.every((a) => Object.values(a).every((v) => {\r\n      return isAtomicType(v) || isRVectorAtomic(v);\r\n    }));\r\n    if (isConsistent && isAtomic) {\r\n      return RDataFrame.fromD3(_arr);\r\n    }\r\n  }\r\n\r\n  // Not D3 formatted - Can we shortcut and convert directly?\r\n  if (arr.every((v) => typeof v === 'boolean' || v === null)) {\r\n    return new RLogical(arr as (boolean | null)[]);\r\n  }\r\n  if (arr.every((v) => typeof v === 'number' || v === null)) {\r\n    return new RDouble(arr as (number | null)[]);\r\n  }\r\n  if (arr.every((v) => typeof v === 'string' || v === null)) {\r\n    return new RCharacter(arr as (string | null)[]);\r\n  }\r\n\r\n  // Not D3 & mixed types: use R's built in object coercion with c() so as to\r\n  // match R's built in coercion rules\r\n  try {\r\n    const call = new RCall([new RSymbol('c'), ...arr]);\r\n    protectInc(call, prot);\r\n    return call.eval();\r\n  } finally {\r\n    unprotect(prot.n);\r\n  }\r\n}\r\n\r\nexport class RObjectBase {\r\n  ptr: RPtr;\r\n  constructor(ptr: RPtr) {\r\n    this.ptr = ptr;\r\n  }\r\n\r\n  type(): RType {\r\n    const typeNumber = Module._TYPEOF(this.ptr) as RTypeNumber;\r\n    const type = Object.keys(RTypeMap).find(\r\n      (typeName) => RTypeMap[typeName as RType] === typeNumber\r\n    );\r\n    return type as RType;\r\n  }\r\n}\r\n\r\nexport class RObject extends RObjectBase {\r\n  constructor(data: WebRData) {\r\n    if (!(data instanceof RObjectBase)) {\r\n      return newObjectFromData(data);\r\n    }\r\n\r\n    super(data.ptr);\r\n  }\r\n\r\n  static wrap<T extends typeof RObject>(this: T, ptr: RPtr): InstanceType<T> {\r\n    const typeNumber = Module._TYPEOF(ptr) as RTypeNumber;\r\n    const type = Object.keys(RTypeMap)[Object.values(RTypeMap).indexOf(typeNumber)];\r\n    return new (getRWorkerClass(type as RType))(new RObjectBase(ptr)) as InstanceType<T>;\r\n  }\r\n\r\n  get [Symbol.toStringTag](): string {\r\n    return `RObject:${this.type()}`;\r\n  }\r\n\r\n  /** @internal */\r\n  static getPersistentObject(prop: keyof typeof objs): unknown {\r\n    return objs[prop];\r\n  }\r\n\r\n  /** @internal */\r\n  getPropertyValue(prop: keyof this): unknown {\r\n    return this[prop];\r\n  }\r\n\r\n  inspect(): void {\r\n    parseEvalBare('.Internal(inspect(x))', { x: this });\r\n  }\r\n\r\n  isNull(): this is RNull {\r\n    return Module._TYPEOF(this.ptr) === RTypeMap.null;\r\n  }\r\n\r\n  isNa(): boolean {\r\n    try {\r\n      const result = parseEvalBare('is.na(x)', { x: this }) as RLogical;\r\n      protect(result);\r\n      return result.toBoolean();\r\n    } finally {\r\n      unprotect(1);\r\n    }\r\n  }\r\n\r\n  isUnbound(): boolean {\r\n    return this.ptr === objs.unboundValue.ptr;\r\n  }\r\n\r\n  attrs(): Nullable<RPairlist> {\r\n    return RPairlist.wrap(Module._ATTRIB(this.ptr));\r\n  }\r\n\r\n  class(): RCharacter {\r\n    const prot = { n: 0 };\r\n    const classCall = new RCall([new RSymbol('class'), this]);\r\n    protectInc(classCall, prot);\r\n    try {\r\n      return classCall.eval() as RCharacter;\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  setNames(values: (string | null)[] | null): this {\r\n    let namesObj: RObject;\r\n\r\n    if (values === null) {\r\n      namesObj = objs.null;\r\n    } else if (Array.isArray(values) && values.every((v) => typeof v === 'string' || v === null)) {\r\n      namesObj = new RCharacter(values);\r\n    } else {\r\n      throw new Error('Argument to setNames must be null or an Array of strings or null');\r\n    }\r\n\r\n    // `setAttrib()` protects its inputs\r\n    Module._Rf_setAttrib(this.ptr, objs.namesSymbol.ptr, namesObj.ptr);\r\n    return this;\r\n  }\r\n\r\n  names(): (string | null)[] | null {\r\n    const names = RCharacter.wrap(Module._Rf_getAttrib(this.ptr, objs.namesSymbol.ptr));\r\n    if (names.isNull()) {\r\n      return null;\r\n    } else {\r\n      return names.toArray();\r\n    }\r\n  }\r\n\r\n  includes(name: string) {\r\n    const names = this.names();\r\n    return names && names.includes(name);\r\n  }\r\n\r\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\r\n  toJs(options: ToJsOptions = { depth: 0 }, depth = 1): WebRDataJs {\r\n    throw new Error('This R object cannot be converted to JS');\r\n  }\r\n\r\n  subset(prop: number | string): RObject {\r\n    return this.#slice(prop, objs.bracketSymbol.ptr);\r\n  }\r\n\r\n  get(prop: number | string): RObject {\r\n    return this.#slice(prop, objs.bracket2Symbol.ptr);\r\n  }\r\n\r\n  getDollar(prop: string): RObject {\r\n    return this.#slice(prop, objs.dollarSymbol.ptr);\r\n  }\r\n\r\n  #slice(prop: number | string, op: RPtr): RObject {\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const idx = new RObject(prop);\r\n      protectInc(idx, prot);\r\n\r\n      const call = Module._Rf_lang3(op, this.ptr, idx.ptr);\r\n      protectInc(call, prot);\r\n\r\n      return RObject.wrap(safeEval(call, objs.baseEnv));\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  pluck(...path: (string | number)[]): RObject | undefined {\r\n    const index = protectWithIndex(objs.null);\r\n\r\n    try {\r\n      const getter = (obj: RObject, prop: string | number): RObject => {\r\n        const out = obj.get(prop);\r\n        return reprotect(out, index);\r\n      };\r\n      const result = path.reduce(getter, this);\r\n\r\n      return result.isNull() ? undefined : result;\r\n    } finally {\r\n      unprotectIndex(index);\r\n    }\r\n  }\r\n\r\n  set(prop: string | number, value: RObject | WebRDataRaw): RObject {\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const idx = new RObject(prop);\r\n      protectInc(idx, prot);\r\n\r\n      const valueObj = new RObject(value);\r\n      protectInc(valueObj, prot);\r\n\r\n      const assign = new RSymbol('[[<-');\r\n      const call = Module._Rf_lang4(assign.ptr, this.ptr, idx.ptr, valueObj.ptr);\r\n      protectInc(call, prot);\r\n\r\n      return RObject.wrap(safeEval(call, objs.baseEnv));\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  /** @internal */\r\n  static getMethods(obj: RObject) {\r\n    const props = new Set<string>();\r\n    let cur: unknown = obj;\r\n    do {\r\n      Object.getOwnPropertyNames(cur).map((p) => props.add(p));\r\n    } while ((cur = Object.getPrototypeOf(cur)));\r\n    return [...props.keys()].filter((i) => typeof obj[i as keyof typeof obj] === 'function');\r\n  }\r\n}\r\n\r\nexport class RNull extends RObject {\r\n  constructor() {\r\n    super(new RObjectBase(Module.getValue(Module._R_NilValue, '*')));\r\n    return this;\r\n  }\r\n\r\n  toJs(): WebRDataJsNull {\r\n    return { type: 'null' };\r\n  }\r\n}\r\n\r\nexport class RSymbol extends RObject {\r\n  // Note that symbols don't need to be protected. This also means\r\n  // that allocating symbols in loops with random data is probably a\r\n  // bad idea because this leaks memory.\r\n  constructor(x: WebRDataScalar<string>) {\r\n    if (x instanceof RObjectBase) {\r\n      assertRType(x, 'symbol');\r\n      super(x);\r\n      return;\r\n    }\r\n    const name = Module.allocateUTF8(x as string);\r\n    try {\r\n      super(new RObjectBase(Module._Rf_install(name)));\r\n    } finally {\r\n      Module._free(name);\r\n    }\r\n  }\r\n\r\n  toJs(): WebRDataJsSymbol {\r\n    const obj = this.toObject();\r\n    return {\r\n      type: 'symbol',\r\n      printname: obj.printname,\r\n      symvalue: obj.symvalue,\r\n      internal: obj.internal,\r\n    };\r\n  }\r\n\r\n  toObject(): {\r\n    printname: string | null;\r\n    symvalue: RPtr | null;\r\n    internal: RPtr | null;\r\n  } {\r\n    return {\r\n      printname: this.printname().isUnbound() ? null : this.printname().toString(),\r\n      symvalue: this.symvalue().isUnbound() ? null : this.symvalue().ptr,\r\n      internal: this.internal().isNull() ? null : this.internal().ptr,\r\n    };\r\n  }\r\n\r\n  toString(): string {\r\n    return this.printname().toString();\r\n  }\r\n\r\n  printname(): RString {\r\n    return RString.wrap(Module._PRINTNAME(this.ptr));\r\n  }\r\n  symvalue(): RObject {\r\n    return RObject.wrap(Module._SYMVALUE(this.ptr));\r\n  }\r\n  internal(): RObject {\r\n    return RObject.wrap(Module._INTERNAL(this.ptr));\r\n  }\r\n}\r\n\r\nexport class RPairlist extends RObject {\r\n  constructor(val: WebRData) {\r\n    if (val instanceof RObjectBase) {\r\n      assertRType(val, 'pairlist');\r\n      super(val);\r\n      return this;\r\n    }\r\n\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const { names, values } = toWebRData(val);\r\n\r\n      const list = RPairlist.wrap(Module._Rf_allocList(values.length));\r\n      protectInc(list, prot);\r\n\r\n      for (\r\n        let [i, next] = [0, list as Nullable<RPairlist>];\r\n        !next.isNull();\r\n        [i, next] = [i + 1, next.cdr()]\r\n      ) {\r\n        next.setcar(new RObject(values[i]));\r\n      }\r\n\r\n      list.setNames(names);\r\n      super(list);\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  get length(): number {\r\n    return this.toArray().length;\r\n  }\r\n\r\n  toArray(options: ToJsOptions = { depth: 1 }): WebRData[] {\r\n    return this.toJs(options).values;\r\n  }\r\n\r\n  toObject({\r\n    allowDuplicateKey = true,\r\n    allowEmptyKey = false,\r\n    depth = -1,\r\n  } = {}): NamedObject<WebRData> {\r\n    const entries = this.entries({ depth });\r\n    const keys = entries.map(([k,]) => k);\r\n    if (!allowDuplicateKey && new Set(keys).size !== keys.length) {\r\n      throw new Error('Duplicate key when converting pairlist without allowDuplicateKey enabled');\r\n    }\r\n    if (!allowEmptyKey && keys.some((k) => !k)) {\r\n      throw new Error('Empty or null key when converting pairlist without allowEmptyKey enabled');\r\n    }\r\n    return Object.fromEntries(\r\n      entries.filter((u, idx) => entries.findIndex((v) => v[0] === u[0]) === idx)\r\n    ) as NamedObject<WebRData>;\r\n  }\r\n\r\n  entries(options: ToJsOptions = { depth: 1 }): NamedEntries<WebRData> {\r\n    const obj = this.toJs(options);\r\n    return obj.values.map((v, i) => [obj.names ? obj.names[i] : null, v]);\r\n  }\r\n\r\n  toJs(options: ToJsOptions = { depth: 0 }, depth = 1): WebRDataJsNode {\r\n    const namesArray: string[] = [];\r\n    let hasNames = false;\r\n    const values: WebRDataJsNode['values'] = [];\r\n\r\n    for (let next = this as Nullable<RPairlist>; !next.isNull(); next = next.cdr()) {\r\n      const symbol = next.tag();\r\n      if (symbol.isNull()) {\r\n        namesArray.push('');\r\n      } else {\r\n        hasNames = true;\r\n        namesArray.push(symbol.toString());\r\n      }\r\n      if (options.depth && depth >= options.depth) {\r\n        values.push(next.car());\r\n      } else {\r\n        values.push(next.car().toJs(options, depth + 1));\r\n      }\r\n    }\r\n    const names = hasNames ? namesArray : null;\r\n    return { type: 'pairlist', names, values };\r\n  }\r\n\r\n  includes(name: string): boolean {\r\n    return name in this.toObject();\r\n  }\r\n\r\n  setcar(obj: RObject): void {\r\n    Module._SETCAR(this.ptr, obj.ptr);\r\n  }\r\n\r\n  car(): RObject {\r\n    return RObject.wrap(Module._CAR(this.ptr));\r\n  }\r\n\r\n  cdr(): Nullable<RPairlist> {\r\n    return RObject.wrap(Module._CDR(this.ptr)) as Nullable<RPairlist>;\r\n  }\r\n\r\n  tag(): Nullable<RSymbol> {\r\n    return RObject.wrap(Module._TAG(this.ptr)) as Nullable<RSymbol>;\r\n  }\r\n}\r\n\r\nexport class RCall extends RObject {\r\n  constructor(val: WebRData) {\r\n    if (val instanceof RObjectBase) {\r\n      assertRType(val, 'call');\r\n      super(val);\r\n      return this;\r\n    }\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const { values } = toWebRData(val);\r\n      const objs = values.map((value) => protectInc(new RObject(value), prot));\r\n      const call = RCall.wrap(Module._Rf_allocVector(RTypeMap.call, values.length));\r\n      protectInc(call, prot);\r\n\r\n      for (\r\n        let [i, next] = [0, call as Nullable<RPairlist>];\r\n        !next.isNull();\r\n        [i, next] = [i + 1, next.cdr()]\r\n      ) {\r\n        next.setcar(objs[i]);\r\n      }\r\n      super(call);\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  setcar(obj: RObject): void {\r\n    Module._SETCAR(this.ptr, obj.ptr);\r\n  }\r\n\r\n  car(): RObject {\r\n    return RObject.wrap(Module._CAR(this.ptr));\r\n  }\r\n\r\n  cdr(): Nullable<RPairlist> {\r\n    return RObject.wrap(Module._CDR(this.ptr)) as Nullable<RPairlist>;\r\n  }\r\n\r\n  eval(): RObject {\r\n    return Module.webr.evalR(this, { env: objs.baseEnv });\r\n  }\r\n\r\n  capture(options: EvalROptions = {}) {\r\n    return Module.webr.captureR(this, options);\r\n  }\r\n\r\n  deparse(): string {\r\n    const prot = { n: 0 };\r\n    try {\r\n      const call = Module._Rf_lang2(\r\n        new RSymbol('deparse1').ptr,\r\n        Module._Rf_lang2(new RSymbol('quote').ptr, this.ptr)\r\n      );\r\n      protectInc(call, prot);\r\n\r\n      const val = RCharacter.wrap(safeEval(call, objs.baseEnv));\r\n      protectInc(val, prot);\r\n\r\n      return val.toString();\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n}\r\n\r\nexport class RList extends RObject {\r\n  constructor(val: WebRData, names: (string | null)[] | null = null) {\r\n    if (val instanceof RObjectBase) {\r\n      assertRType(val, 'list');\r\n      super(val);\r\n      if (names) {\r\n        if (names.length !== this.length) {\r\n          throw new Error(\r\n            \"Can't construct named `RList`. Supplied `names` must be the same length as the list.\"\r\n          );\r\n        }\r\n        this.setNames(names);\r\n      }\r\n      return this;\r\n    }\r\n\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const data = toWebRData(val);\r\n      const ptr = Module._Rf_allocVector(RTypeMap.list, data.values.length);\r\n      protectInc(ptr, prot);\r\n\r\n      data.values.forEach((v, i) => {\r\n        // When we specifically use the `RList` constructor, deeply convert R objects to R lists\r\n        if (isSimpleObject(v)) {\r\n          Module._SET_VECTOR_ELT(ptr, i, new RList(v).ptr);\r\n        } else {\r\n          Module._SET_VECTOR_ELT(ptr, i, new RObject(v).ptr);\r\n        }\r\n      });\r\n\r\n      const _names = names ? names : data.names;\r\n      if (_names && _names.length !== data.values.length) {\r\n        throw new Error(\r\n          \"Can't construct named `RList`. Supplied `names` must be the same length as the list.\"\r\n        );\r\n      }\r\n      RObject.wrap(ptr).setNames(_names);\r\n\r\n      super(new RObjectBase(ptr));\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  get length(): number {\r\n    return Module._LENGTH(this.ptr);\r\n  }\r\n\r\n  isDataFrame(): boolean {\r\n    const classes = RPairlist.wrap(Module._ATTRIB(this.ptr)).get('class') as RNull | RCharacter;\r\n    return !classes.isNull() && classes.toArray().includes('data.frame');\r\n  }\r\n\r\n  toArray(options: { depth: number } = { depth: 1 }): WebRData[] {\r\n    return this.toJs(options).values;\r\n  }\r\n\r\n  toObject({\r\n    allowDuplicateKey = true,\r\n    allowEmptyKey = false,\r\n    depth = -1,\r\n  } = {}): NamedObject<WebRData> {\r\n    const entries = this.entries({ depth });\r\n    const keys = entries.map(([k,]) => k);\r\n    if (!allowDuplicateKey && new Set(keys).size !== keys.length) {\r\n      throw new Error('Duplicate key when converting list without allowDuplicateKey enabled');\r\n    }\r\n    if (!allowEmptyKey && keys.some((k) => !k)) {\r\n      throw new Error('Empty or null key when converting list without allowEmptyKey enabled');\r\n    }\r\n    return Object.fromEntries(\r\n      entries.filter((u, idx) => entries.findIndex((v) => v[0] === u[0]) === idx)\r\n    ) as NamedObject<WebRData>;\r\n  }\r\n\r\n  toD3(): NamedObject<WebRData>[] {\r\n    if (!this.isDataFrame()) {\r\n      throw new Error(\r\n        \"Can't convert R list object to D3 format. Object must be of class 'data.frame'.\"\r\n      );\r\n    }\r\n    const entries = this.entries() as Array<[string, atomicType[]]>;\r\n    return entries.reduce((a, entry) => {\r\n      entry[1].forEach((v, j) => a[j] = Object.assign(a[j] || {}, { [entry[0]!]: v }));\r\n      return a;\r\n    }, []);\r\n  }\r\n\r\n  entries(options: { depth: number } = { depth: -1 }): NamedEntries<WebRData> {\r\n    const obj = this.toJs(options);\r\n\r\n    // If this is a data frame, assume we have atomic vector columns and can\r\n    // convert directly to array values by default.\r\n    if (this.isDataFrame() && options.depth < 0) {\r\n      obj.values = (obj.values as RVectorAtomic<atomicType>[]).map((v) => v.toArray());\r\n    }\r\n    return obj.values.map((v, i) => [obj.names ? obj.names[i] : null, v]);\r\n  }\r\n\r\n  toJs(options: { depth: number } = { depth: 0 }, depth = 1): WebRDataJsNode {\r\n    return {\r\n      type: 'list',\r\n      names: this.names(),\r\n      values: [...Array(this.length).keys()].map((i) => {\r\n        if (options.depth && depth >= options.depth) {\r\n          return this.get(i + 1);\r\n        } else {\r\n          return this.get(i + 1).toJs(options, depth + 1);\r\n        }\r\n      }),\r\n    };\r\n  }\r\n}\r\n\r\nexport class RDataFrame extends RList {\r\n  constructor(val: WebRData) {\r\n    if (val instanceof RObjectBase) {\r\n      super(val);\r\n      if (!this.isDataFrame()) {\r\n        throw new Error(\"Can't construct `RDataFrame`. Supplied R object is not a `data.frame`.\");\r\n      }\r\n      return this;\r\n    }\r\n    return RDataFrame.fromObject(val);\r\n  }\r\n\r\n  static fromObject(obj: WebRData) {\r\n    const { names, values } = toWebRData(obj);\r\n    const prot = { n: 0 };\r\n\r\n    // Do we have consistent columns of atomic type? If so, make a `data.frame`.\r\n    try {\r\n      const hasNames = !!names && names.length > 0 && names.every((v) => v);\r\n      const hasArrays = values.length > 0 && values.every((v) => {\r\n        return Array.isArray(v) || ArrayBuffer.isView(v) || v instanceof ArrayBuffer;\r\n      });\r\n\r\n      if (hasNames && hasArrays) {\r\n        const _values = values as WebRData[][];\r\n        const isConsistentLength = _values.every((a) => a.length === _values[0].length);\r\n        const isAtomic = _values.every((a) => {\r\n          return isAtomicType(a[0]) || isRVectorAtomic(a[0]);\r\n        });\r\n\r\n        if (isConsistentLength && isAtomic) {\r\n          const listObj = new RList({\r\n            type: 'list',\r\n            names: names,\r\n            values: _values.map((a) => newObjectFromData(a))\r\n          });\r\n          protectInc(listObj, prot);\r\n\r\n          const asDataFrame = new RCall([new RSymbol('as.data.frame'), listObj]);\r\n          protectInc(asDataFrame, prot);\r\n\r\n          return new RDataFrame(asDataFrame.eval());\r\n        }\r\n      }\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n\r\n    // Not eligible as a `data.frame`, throw an error.\r\n    throw new Error(\"Can't construct `data.frame`. Source object is not eligible.\");\r\n  }\r\n\r\n  static fromD3(arr: { [key: string]: WebRData }[]) {\r\n    return this.fromObject(\r\n      Object.fromEntries(Object.keys(arr[0]).map((k) => [k, arr.map((v) => v[k])]))\r\n    );\r\n  }\r\n}\r\n\r\nexport class RFunction extends RObject {\r\n  exec(...args: (WebRDataRaw | RObject)[]): RObject {\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const call = new RCall([this, ...args]);\r\n      protectInc(call, prot);\r\n      return call.eval();\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  capture(options: EvalROptions = {}, ...args: (WebRDataRaw | RObject)[]) {\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const call = new RCall([this, ...args]);\r\n      protectInc(call, prot);\r\n      return call.capture(options);\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n}\r\n\r\nexport class RString extends RObject {\r\n  static CEType = {\r\n    CE_NATIVE: 0,\r\n    CE_UTF8: 1,\r\n    CE_LATIN1: 2,\r\n    CE_BYTES: 3,\r\n    CE_SYMBOL: 5,\r\n    CE_ANY: 99\r\n  } as const;\r\n\r\n  // Unlike symbols, strings are not cached and must thus be protected\r\n  constructor(x: WebRDataScalar<string>) {\r\n    if (x instanceof RObjectBase) {\r\n      assertRType(x, 'string');\r\n      super(x);\r\n      return;\r\n    }\r\n\r\n    const name = Module.allocateUTF8(x as string);\r\n\r\n    try {\r\n      super(new RObjectBase(Module._Rf_mkCharCE(name, RString.CEType.CE_UTF8)));\r\n    } finally {\r\n      Module._free(name);\r\n    }\r\n  }\r\n\r\n  toString(): string {\r\n    const vmax = Module._vmaxget();\r\n    try {\r\n      return Module.UTF8ToString(Module._Rf_translateCharUTF8(this.ptr));\r\n    } finally {\r\n      Module._vmaxset(vmax);\r\n    }\r\n  }\r\n\r\n  toJs(): WebRDataJsString {\r\n    return {\r\n      type: 'string',\r\n      value: this.toString(),\r\n    };\r\n  }\r\n}\r\n\r\nexport class REnvironment extends RObject {\r\n  constructor(val: WebRData = {}) {\r\n    if (val instanceof RObjectBase) {\r\n      assertRType(val, 'environment');\r\n      super(val);\r\n      return this;\r\n    }\r\n    let nProt = 0;\r\n\r\n    try {\r\n      const { names, values } = toWebRData(val);\r\n\r\n      const ptr = protect(Module._R_NewEnv(objs.globalEnv.ptr, 0, 0));\r\n      ++nProt;\r\n\r\n      values.forEach((v, i) => {\r\n        const name = names ? names[i] : null;\r\n        if (!name) {\r\n          throw new Error(\"Can't create object in new environment with empty symbol name\");\r\n        }\r\n\r\n        const sym = new RSymbol(name);\r\n        const vObj = protect(new RObject(v));\r\n        try {\r\n          envPoke(ptr, sym, vObj);\r\n        } finally {\r\n          unprotect(1);\r\n        }\r\n      });\r\n\r\n      super(new RObjectBase(ptr));\r\n    } finally {\r\n      unprotect(nProt);\r\n    }\r\n  }\r\n\r\n  ls(all = false, sorted = true): string[] {\r\n    const ls = RCharacter.wrap(Module._R_lsInternal3(this.ptr, Number(all), Number(sorted)));\r\n    return ls.toArray() as string[];\r\n  }\r\n\r\n  bind(name: string, value: WebRData): void {\r\n    const sym = new RSymbol(name);\r\n    const valueObj = protect(new RObject(value));\r\n\r\n    try {\r\n      envPoke(this, sym, valueObj);\r\n    } finally {\r\n      unprotect(1);\r\n    }\r\n  }\r\n\r\n  names(): string[] {\r\n    return this.ls(true, true);\r\n  }\r\n\r\n  frame(): RObject {\r\n    return RObject.wrap(Module._FRAME(this.ptr));\r\n  }\r\n\r\n  subset(prop: number | string): RObject {\r\n    if (typeof prop === 'number') {\r\n      throw new Error('Object of type environment is not subsettable');\r\n    }\r\n    return this.getDollar(prop);\r\n  }\r\n\r\n  toObject({ depth = -1 } = {}): NamedObject<WebRData> {\r\n    const symbols = this.names();\r\n    return Object.fromEntries(\r\n      [...Array(symbols.length).keys()].map((i) => {\r\n        const value = this.getDollar(symbols[i]);\r\n        return [symbols[i], depth < 0 ? value : value.toJs({ depth })];\r\n      })\r\n    );\r\n  }\r\n\r\n  toJs(options: { depth: number } = { depth: 0 }, depth = 1): WebRDataJsNode {\r\n    const names = this.names();\r\n    const values = [...Array(names.length).keys()].map((i) => {\r\n      if (options.depth && depth >= options.depth) {\r\n        return this.getDollar(names[i]);\r\n      } else {\r\n        return this.getDollar(names[i]).toJs(options, depth + 1);\r\n      }\r\n    });\r\n\r\n    return {\r\n      type: 'environment',\r\n      names,\r\n      values,\r\n    };\r\n  }\r\n}\r\n\r\ntype TypedArray =\r\n  | Int8Array\r\n  | Uint8Array\r\n  | Int16Array\r\n  | Uint16Array\r\n  | Int32Array\r\n  | Uint32Array\r\n  | Float32Array\r\n  | Float64Array;\r\n\r\nexport type atomicType = number | boolean | Complex | string;\r\n\r\nabstract class RVectorAtomic<T extends atomicType> extends RObject {\r\n  constructor(\r\n    val: WebRDataAtomic<T>,\r\n    kind: RType,\r\n    newSetter: (ptr: RPtr) => (v: any, i: number) => void\r\n  ) {\r\n    if (val instanceof RObjectBase) {\r\n      assertRType(val, kind);\r\n      super(val);\r\n      return this;\r\n    }\r\n\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const { names, values } = toWebRData(val);\r\n\r\n      const ptr = Module._Rf_allocVector(RTypeMap[kind], values.length);\r\n      protectInc(ptr, prot);\r\n\r\n      values.forEach(newSetter(ptr));\r\n      RObject.wrap(ptr).setNames(names);\r\n\r\n      super(new RObjectBase(ptr));\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  get length(): number {\r\n    return Module._LENGTH(this.ptr);\r\n  }\r\n\r\n  get(prop: number | string): this {\r\n    return super.get(prop) as this;\r\n  }\r\n\r\n  subset(prop: number | string): this {\r\n    return super.subset(prop) as this;\r\n  }\r\n\r\n  getDollar(): RObject {\r\n    throw new Error('$ operator is invalid for atomic vectors');\r\n  }\r\n\r\n  detectMissing(): boolean[] {\r\n    const prot = { n: 0 };\r\n\r\n    try {\r\n      const call = Module._Rf_lang2(new RSymbol('is.na').ptr, this.ptr);\r\n      protectInc(call, prot);\r\n\r\n      const val = RLogical.wrap(safeEval(call, objs.baseEnv));\r\n      protectInc(val, prot);\r\n\r\n      const ret = val.toTypedArray();\r\n      return Array.from(ret).map((elt) => Boolean(elt));\r\n    } finally {\r\n      unprotect(prot.n);\r\n    }\r\n  }\r\n\r\n  abstract toTypedArray(): TypedArray;\r\n\r\n  toArray(): (T | null)[] {\r\n    const arr = this.toTypedArray();\r\n    return this.detectMissing().map((m, idx) => (m ? null : (arr[idx] as T)));\r\n  }\r\n\r\n  toObject({ allowDuplicateKey = true, allowEmptyKey = false } = {}): NamedObject<T | null> {\r\n    const entries = this.entries();\r\n    const keys = entries.map(([k,]) => k);\r\n    if (!allowDuplicateKey && new Set(keys).size !== keys.length) {\r\n      throw new Error(\r\n        'Duplicate key when converting atomic vector without allowDuplicateKey enabled'\r\n      );\r\n    }\r\n    if (!allowEmptyKey && keys.some((k) => !k)) {\r\n      throw new Error(\r\n        'Empty or null key when converting atomic vector without allowEmptyKey enabled'\r\n      );\r\n    }\r\n    return Object.fromEntries(\r\n      entries.filter((u, idx) => entries.findIndex((v) => v[0] === u[0]) === idx)\r\n    ) as NamedObject<T | null>;\r\n  }\r\n\r\n  entries(): NamedEntries<T | null> {\r\n    const values = this.toArray();\r\n    const names = this.names();\r\n    return values.map((v, i) => [names ? names[i] : null, v]);\r\n  }\r\n\r\n  toJs(): WebRDataJsAtomic<T> {\r\n    return {\r\n      type: this.type() as 'logical' | 'integer' | 'double' | 'complex' | 'character' | 'raw',\r\n      names: this.names(),\r\n      values: this.toArray(),\r\n    };\r\n  }\r\n}\r\n\r\nexport class RLogical extends RVectorAtomic<boolean> {\r\n  constructor(val: WebRDataAtomic<boolean>) {\r\n    super(val, 'logical', RLogical.#newSetter);\r\n  }\r\n\r\n  static #newSetter = (ptr: RPtr) => {\r\n    const data = Module._LOGICAL(ptr);\r\n    const naLogical = Module.getValue(Module._R_NaInt, 'i32');\r\n    return (v: null | boolean, i: number) => {\r\n      Module.setValue(data + 4 * i, v === null ? naLogical : Boolean(v), 'i32');\r\n    };\r\n  };\r\n\r\n  getBoolean(idx: number): boolean | null {\r\n    return this.get(idx).toArray()[0];\r\n  }\r\n\r\n  toBoolean(): boolean {\r\n    if (this.length !== 1) {\r\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\r\n    }\r\n    const val = this.getBoolean(1);\r\n    if (val === null) {\r\n      throw new Error(\"Can't convert missing value `NA` to a JS boolean\");\r\n    }\r\n    return val;\r\n  }\r\n\r\n  toTypedArray(): Int32Array {\r\n    return new Int32Array(\r\n      Module.HEAP32.subarray(\r\n        Module._LOGICAL(this.ptr) / 4,\r\n        Module._LOGICAL(this.ptr) / 4 + this.length\r\n      )\r\n    );\r\n  }\r\n\r\n  toArray(): (boolean | null)[] {\r\n    const arr = this.toTypedArray();\r\n    return this.detectMissing().map((m, idx) => (m ? null : Boolean(arr[idx])));\r\n  }\r\n}\r\n\r\nexport class RInteger extends RVectorAtomic<number> {\r\n  constructor(val: WebRDataAtomic<number>) {\r\n    super(val, 'integer', RInteger.#newSetter);\r\n  }\r\n\r\n  static #newSetter = (ptr: RPtr) => {\r\n    const data = Module._INTEGER(ptr);\r\n    const naInteger = Module.getValue(Module._R_NaInt, 'i32');\r\n\r\n    return (v: null | number, i: number) => {\r\n      Module.setValue(data + 4 * i, v === null ? naInteger : Math.round(Number(v)), 'i32');\r\n    };\r\n  };\r\n\r\n  getNumber(idx: number): number | null {\r\n    return this.get(idx).toArray()[0];\r\n  }\r\n\r\n  toNumber(): number {\r\n    if (this.length !== 1) {\r\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\r\n    }\r\n    const val = this.getNumber(1);\r\n    if (val === null) {\r\n      throw new Error(\"Can't convert missing value `NA` to a JS number\");\r\n    }\r\n    return val;\r\n  }\r\n\r\n  toTypedArray(): Int32Array {\r\n    return new Int32Array(\r\n      Module.HEAP32.subarray(\r\n        Module._INTEGER(this.ptr) / 4,\r\n        Module._INTEGER(this.ptr) / 4 + this.length\r\n      )\r\n    );\r\n  }\r\n}\r\n\r\nexport class RDouble extends RVectorAtomic<number> {\r\n  constructor(val: WebRDataAtomic<number>) {\r\n    super(val, 'double', RDouble.#newSetter);\r\n  }\r\n\r\n  static #newSetter = (ptr: RPtr) => {\r\n    const data = Module._REAL(ptr);\r\n    const naDouble = Module.getValue(Module._R_NaReal, 'double');\r\n\r\n    return (v: null | number, i: number) => {\r\n      Module.setValue(data + 8 * i, v === null ? naDouble : v, 'double');\r\n    };\r\n  };\r\n\r\n  getNumber(idx: number): number | null {\r\n    return this.get(idx).toArray()[0];\r\n  }\r\n\r\n  toNumber(): number {\r\n    if (this.length !== 1) {\r\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\r\n    }\r\n    const val = this.getNumber(1);\r\n    if (val === null) {\r\n      throw new Error(\"Can't convert missing value `NA` to a JS number\");\r\n    }\r\n    return val;\r\n  }\r\n\r\n  toTypedArray(): Float64Array {\r\n    return new Float64Array(\r\n      Module.HEAPF64.subarray(Module._REAL(this.ptr) / 8, Module._REAL(this.ptr) / 8 + this.length)\r\n    );\r\n  }\r\n}\r\n\r\nexport class RComplex extends RVectorAtomic<Complex> {\r\n  constructor(val: WebRDataAtomic<Complex>) {\r\n    super(val, 'complex', RComplex.#newSetter);\r\n  }\r\n\r\n  static #newSetter = (ptr: RPtr) => {\r\n    const data = Module._COMPLEX(ptr);\r\n    const naDouble = Module.getValue(Module._R_NaReal, 'double');\r\n\r\n    return (v: null | Complex, i: number) => {\r\n      Module.setValue(data + 8 * (2 * i), v === null ? naDouble : v.re, 'double');\r\n      Module.setValue(data + 8 * (2 * i + 1), v === null ? naDouble : v.im, 'double');\r\n    };\r\n  };\r\n\r\n  getComplex(idx: number): Complex | null {\r\n    return this.get(idx).toArray()[0];\r\n  }\r\n\r\n  toComplex(): Complex {\r\n    if (this.length !== 1) {\r\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\r\n    }\r\n    const val = this.getComplex(1);\r\n    if (val === null) {\r\n      throw new Error(\"Can't convert missing value `NA` to a JS object\");\r\n    }\r\n    return val;\r\n  }\r\n\r\n  toTypedArray(): Float64Array {\r\n    return new Float64Array(\r\n      Module.HEAPF64.subarray(\r\n        Module._COMPLEX(this.ptr) / 8,\r\n        Module._COMPLEX(this.ptr) / 8 + 2 * this.length\r\n      )\r\n    );\r\n  }\r\n\r\n  toArray(): (Complex | null)[] {\r\n    const arr = this.toTypedArray();\r\n    return this.detectMissing().map((m, idx) =>\r\n      m ? null : { re: arr[2 * idx], im: arr[2 * idx + 1] }\r\n    );\r\n  }\r\n}\r\n\r\nexport class RCharacter extends RVectorAtomic<string> {\r\n  constructor(val: WebRDataAtomic<string>) {\r\n    super(val, 'character', RCharacter.#newSetter);\r\n  }\r\n\r\n  static #newSetter = (ptr: RPtr) => {\r\n    return (v: null | string, i: number) => {\r\n      if (v === null) {\r\n        Module._SET_STRING_ELT(ptr, i, objs.naString.ptr);\r\n      } else {\r\n        Module._SET_STRING_ELT(ptr, i, new RString(v).ptr);\r\n      }\r\n    };\r\n  };\r\n\r\n  getString(idx: number): string | null {\r\n    return this.get(idx).toArray()[0];\r\n  }\r\n\r\n  toString(): string {\r\n    if (this.length !== 1) {\r\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\r\n    }\r\n    const val = this.getString(1);\r\n    if (val === null) {\r\n      throw new Error(\"Can't convert missing value `NA` to a JS string\");\r\n    }\r\n    return val;\r\n  }\r\n\r\n  toTypedArray(): Uint32Array {\r\n    return new Uint32Array(\r\n      Module.HEAPU32.subarray(\r\n        Module._STRING_PTR(this.ptr) / 4,\r\n        Module._STRING_PTR(this.ptr) / 4 + this.length\r\n      )\r\n    );\r\n  }\r\n\r\n  toArray(): (string | null)[] {\r\n    const vmax = Module._vmaxget();\r\n    try {\r\n      return this.detectMissing().map((m, idx) =>\r\n        m ? null : Module.UTF8ToString(\r\n          Module._Rf_translateCharUTF8(Module._STRING_ELT(this.ptr, idx))\r\n        )\r\n      );\r\n    } finally {\r\n      Module._vmaxset(vmax);\r\n    }\r\n  }\r\n}\r\n\r\nexport class RRaw extends RVectorAtomic<number> {\r\n  constructor(val: WebRDataAtomic<number>) {\r\n    if (val instanceof ArrayBuffer) {\r\n      val = new Uint8Array(val);\r\n    }\r\n    super(val, 'raw', RRaw.#newSetter);\r\n  }\r\n\r\n  static #newSetter = (ptr: RPtr) => {\r\n    const data = Module._RAW(ptr);\r\n\r\n    return (v: number, i: number) => {\r\n      Module.setValue(data + i, Number(v), 'i8');\r\n    };\r\n  };\r\n\r\n  getNumber(idx: number): number | null {\r\n    return this.get(idx).toArray()[0];\r\n  }\r\n\r\n  toNumber(): number {\r\n    if (this.length !== 1) {\r\n      throw new Error(\"Can't convert atomic vector of length > 1 to a scalar JS value\");\r\n    }\r\n    const val = this.getNumber(1);\r\n    if (val === null) {\r\n      throw new Error(\"Can't convert missing value `NA` to a JS number\");\r\n    }\r\n    return val;\r\n  }\r\n\r\n  toTypedArray(): Uint8Array {\r\n    return new Uint8Array(\r\n      Module.HEAPU8.subarray(Module._RAW(this.ptr), Module._RAW(this.ptr) + this.length)\r\n    );\r\n  }\r\n}\r\n\r\n/*\r\n * Convert the various types possible in the type union WebRData into\r\n * consistently typed arrays of names and values.\r\n */\r\nfunction toWebRData<T>(jsObj: WebRDataAtomic<T>): {\r\n  names: (string | null)[] | null;\r\n  values: (T | null)[];\r\n};\r\nfunction toWebRData(jsObj: WebRData): WebRData;\r\nfunction toWebRData(jsObj: WebRData): WebRData {\r\n  if (isWebRDataJs(jsObj)) {\r\n    return jsObj;\r\n  } else if (Array.isArray(jsObj) || ArrayBuffer.isView(jsObj)) {\r\n    return { names: null, values: jsObj };\r\n  } else if (jsObj && typeof jsObj === 'object' && !isComplex(jsObj)) {\r\n    return {\r\n      names: Object.keys(jsObj),\r\n      values: Object.values(jsObj),\r\n    };\r\n  }\r\n  return { names: null, values: [jsObj] };\r\n}\r\n\r\nexport function getRWorkerClass(type: RType | RCtor): typeof RObject {\r\n  const typeClasses: { [key: string]: typeof RObject } = {\r\n    object: RObject,\r\n    null: RNull,\r\n    symbol: RSymbol,\r\n    pairlist: RPairlist,\r\n    closure: RFunction,\r\n    environment: REnvironment,\r\n    call: RCall,\r\n    special: RFunction,\r\n    builtin: RFunction,\r\n    string: RString,\r\n    logical: RLogical,\r\n    integer: RInteger,\r\n    double: RDouble,\r\n    complex: RComplex,\r\n    character: RCharacter,\r\n    list: RList,\r\n    raw: RRaw,\r\n    function: RFunction,\r\n    dataframe: RDataFrame,\r\n  };\r\n  if (type in typeClasses) {\r\n    return typeClasses[type];\r\n  }\r\n  return RObject;\r\n}\r\n\r\n/**\r\n * Test for an RWorker.RObject instance.\r\n *\r\n * RWorker.RObject is the internal interface to R objects, intended to be used\r\n * on the worker thread.\r\n *\r\n * @private\r\n * @param {any} value The object to test.\r\n * @return {boolean} True if the object is an instance of an RObject.\r\n */\r\nexport function isRObject(value: any): value is RObject {\r\n  return value instanceof RObject;\r\n}\r\n\r\n/**\r\n * Test for an RWorker.RVectorAtomic instance.\r\n *\r\n * @private\r\n * @param {any} value The object to test.\r\n * @return {boolean} True if the object is an instance of an RVectorAtomic.\r\n */\r\nexport function isRVectorAtomic(value: any): value is RVectorAtomic<atomicType> {\r\n  const atomicRTypes = ['logical', 'integer', 'double', 'complex', 'character'];\r\n\r\n  return (\r\n    (isRObject(value) && atomicRTypes.includes(value.type()))\r\n    || (isRObject(value) && value.isNa())\r\n  );\r\n}\r\n\r\n/**\r\n * Test for an atomicType, including missing `null` values.\r\n *\r\n * @private\r\n * @param {any} value The object to test.\r\n * @return {boolean} True if the object is of type atomicType.\r\n */\r\nexport function isAtomicType(value: any): value is atomicType | null {\r\n  return (\r\n    value === null\r\n    || typeof value === 'number'\r\n    || typeof value === 'boolean'\r\n    || typeof value === 'string'\r\n    || isComplex(value)\r\n  );\r\n}\r\n\r\n/**\r\n * A store for persistent R objects, initialised at R startup.\r\n */\r\nexport let objs: {\r\n  baseEnv: REnvironment,\r\n  bracket2Symbol: RSymbol,\r\n  bracketSymbol: RSymbol,\r\n  dollarSymbol: RSymbol,\r\n  emptyEnv: REnvironment,\r\n  false: RLogical,\r\n  globalEnv: REnvironment,\r\n  na: RLogical,\r\n  namesSymbol: RSymbol,\r\n  naString: RObject,\r\n  null: RNull,\r\n  true: RLogical,\r\n  unboundValue: RObject,\r\n};\r\n\r\n/**\r\n * Populate the persistent R object store.\r\n * @internal\r\n */\r\nexport function initPersistentObjects() {\r\n  objs = {\r\n    baseEnv: REnvironment.wrap(Module.getValue(Module._R_BaseEnv, '*')),\r\n    bracket2Symbol: RSymbol.wrap(Module.getValue(Module._R_Bracket2Symbol, '*')),\r\n    bracketSymbol: RSymbol.wrap(Module.getValue(Module._R_BracketSymbol, '*')),\r\n    dollarSymbol: RSymbol.wrap(Module.getValue(Module._R_DollarSymbol, '*')),\r\n    emptyEnv: REnvironment.wrap(Module.getValue(Module._R_EmptyEnv, '*')),\r\n    false: RLogical.wrap(Module.getValue(Module._R_FalseValue, '*')),\r\n    globalEnv: REnvironment.wrap(Module.getValue(Module._R_GlobalEnv, '*')),\r\n    na: RLogical.wrap(Module.getValue(Module._R_LogicalNAValue, '*')),\r\n    namesSymbol: RSymbol.wrap(Module.getValue(Module._R_NamesSymbol, '*')),\r\n    naString: RObject.wrap(Module.getValue(Module._R_NaString, '*')),\r\n    null: RNull.wrap(Module.getValue(Module._R_NilValue, '*')),\r\n    true: RLogical.wrap(Module.getValue(Module._R_TrueValue, '*')),\r\n    unboundValue: RObject.wrap(Module.getValue(Module._R_UnboundValue, '*')),\r\n  };\r\n}\r\n", "import { IN_NODE } from './compat';\r\nimport { WebRError } from './error';\r\nimport { isComplex, isWebRDataJs } from './robj';\r\nimport { RObjectBase } from './robj-worker';\r\n\r\nexport type ResolveFn = (_value?: unknown) => void;\r\nexport type RejectFn = (_reason?: any) => void;\r\n\r\nexport function promiseHandles() {\r\n  const out = {\r\n    resolve: () => { return; },\r\n    reject: () => { return; },\r\n    promise: Promise.resolve(),\r\n  } as {\r\n    resolve: ResolveFn,\r\n    reject: RejectFn,\r\n    promise: Promise<unknown>,\r\n  };\r\n\r\n  const promise = new Promise((resolve, reject) => {\r\n    out.resolve = resolve;\r\n    out.reject = reject;\r\n  });\r\n  out.promise = promise;\r\n\r\n  return out;\r\n}\r\n\r\nexport function sleep(ms: number) {\r\n  return new Promise((resolve) => setTimeout(resolve, ms));\r\n}\r\n\r\nexport function replaceInObject<T>(\r\n  obj: T | T[],\r\n  test: (obj: any) => boolean,\r\n  replacer: (obj: any, ...replacerArgs: any[]) => unknown,\r\n  ...replacerArgs: unknown[]\r\n): T | T[] {\r\n  if (obj === null || obj === undefined || isImageBitmap(obj)) {\r\n    return obj;\r\n  }\r\n  if (obj instanceof ArrayBuffer) {\r\n    return new Uint8Array(obj) as T;\r\n  }\r\n  if (test(obj)) {\r\n    return replacer(obj, ...replacerArgs) as T;\r\n  }\r\n  if (Array.isArray(obj) || ArrayBuffer.isView(obj)) {\r\n    return (obj as unknown[]).map((v) =>\r\n      replaceInObject(v, test, replacer, ...replacerArgs)\r\n    ) as T[];\r\n  }\r\n  if (obj instanceof RObjectBase) {\r\n    return obj;\r\n  }\r\n  if (typeof obj === 'object') {\r\n    return Object.fromEntries(\r\n      Object.entries(obj).map(([k, v]) => [k, replaceInObject(v, test, replacer, ...replacerArgs)])\r\n    ) as T;\r\n  }\r\n  return obj;\r\n}\r\n\r\n/* Workaround for loading a cross-origin script.\r\n *\r\n * When fetching a worker script, the fetch is required by the spec to\r\n * use \"same-origin\" mode. This is to avoid loading a worker with a\r\n * cross-origin global scope, which can allow for a cross-origin\r\n * restriction bypass.\r\n *\r\n * When the fetch URL begins with 'http', we assume the request is\r\n * cross-origin. We download the content of the URL using a XHR first,\r\n * create a blob URL containing the requested content, then load the\r\n * blob URL as a script.\r\n *\r\n * The origin of a blob URL is the same as that of the environment that\r\n * created the URL, and so the global scope of the resulting worker is\r\n * no longer cross-origin. In that case, the cross-origin restriction\r\n * bypass is not possible, and the script is permitted to be loaded.\r\n */\r\nexport function newCrossOriginWorker(url: string, cb: (worker: Worker) => void, onError?: (error: Error) => void): void {\r\n  const req = new XMLHttpRequest();\r\n  req.open('get', url, true);\r\n  req.onload = () => {\r\n    if (req.status >= 200 && req.status < 300) {\r\n      try {\r\n        const worker = new Worker(URL.createObjectURL(new Blob([req.responseText])));\r\n        cb(worker);\r\n      } catch (error) {\r\n        if (onError) {\r\n          onError(error instanceof Error ? error : new Error(String(error)));\r\n        } else {\r\n          throw error;\r\n        }\r\n      }\r\n    } else {\r\n      if (onError) {\r\n        onError(new Error(`Worker loading error: HTTP ${req.status}`));\r\n      } else {\r\n        console.error(`HTTP Error: ${req.status}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  req.onerror = () => {\r\n    if (onError) {\r\n      onError(new Error(`Network error loading ${url}`));\r\n    } else {\r\n      console.error(`Network error loading ${url}`);\r\n    }\r\n  };\r\n  req.send();\r\n}\r\n\r\nexport function isCrossOrigin(urlString: string) {\r\n  if (IN_NODE) return false;\r\n  const url1 = new URL(location.href);\r\n  const url2 = new URL(urlString, location.origin);\r\n  if (url1.host === url2.host && url1.port === url2.port && url1.protocol === url2.protocol) {\r\n    return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport function isImageBitmap(value: any): value is ImageBitmap {\r\n  return (typeof ImageBitmap !== 'undefined' && value instanceof ImageBitmap);\r\n}\r\n\r\nexport function throwUnreachable(context?: string) {\r\n  let msg = 'Reached the unreachable';\r\n  msg = msg + (context ? ': ' + context : '.');\r\n\r\n  throw new WebRError(msg);\r\n}\r\n\r\nexport function isSimpleObject(value: any): value is {[key: string | number | symbol]: any} {\r\n  return (\r\n    typeof value === 'object' &&\r\n    value !== null &&\r\n    !Array.isArray(value) &&\r\n    !(ArrayBuffer.isView(value)) &&\r\n    !isComplex(value) &&\r\n    !isWebRDataJs(value) &&\r\n    !(value instanceof Date) &&\r\n    !(value instanceof RegExp) &&\r\n    !(value instanceof Error) &&\r\n    !(value instanceof RObjectBase) &&\r\n    Object.getPrototypeOf(value) === Object.prototype\r\n  );\r\n}\r\n\r\n// From https://stackoverflow.com/a/9458996\r\nexport function bufferToBase64(buffer: ArrayBuffer) {\r\n  let binary = '';\r\n  const bytes = new Uint8Array(buffer);\r\n  const len = bytes.byteLength;\r\n  for (let i = 0; i < len; i++) {\r\n    binary += String.fromCharCode(bytes[i]);\r\n  }\r\n  return window.btoa(binary);\r\n}\r\n", "import { promiseHandles } from '../utils';\r\nimport { encode, decode } from '@msgpack/msgpack';\r\nimport { ServiceWorkerHandlers } from './channel';\r\nimport { WebRChannelError } from '../error';\r\n\r\ndeclare let self: ServiceWorkerGlobalScope;\r\n\r\nconst requests: {\r\n  [key: string]: {\r\n    resolve: (_value?: unknown) => void;\r\n    reject: (_reason?: any) => void;\r\n    promise: Promise<unknown>;\r\n  };\r\n} = {};\r\n\r\nexport function handleInstall() {\r\n  console.log('webR service worker installed');\r\n  void self.skipWaiting();\r\n}\r\n\r\nexport function handleActivate(event: ExtendableEvent) {\r\n  console.log('webR service worker activating');\r\n  event.waitUntil(self.clients.claim());\r\n}\r\n\r\nasync function sendRequest(clientId: string, uuid: string): Promise<Response> {\r\n  const client = await self.clients.get(clientId);\r\n  if (!client) {\r\n    throw new WebRChannelError('Service worker client not found');\r\n  }\r\n\r\n  if (!(uuid in requests)) {\r\n    requests[uuid] = promiseHandles();\r\n    client.postMessage({ type: 'request', data: uuid });\r\n  }\r\n\r\n  const response = await requests[uuid].promise;\r\n  const headers = { 'Cross-Origin-Embedder-Policy': 'require-corp' };\r\n  return new Response(encode(response), { headers });\r\n}\r\n\r\nexport function handleFetch(event: FetchEvent) {\r\n  // console.log('service worker got a fetch', event);\r\n  const wasmMatch = /__wasm__\\/webr-fetch-request\\//.exec(event.request.url);\r\n  if (!wasmMatch) {\r\n    return false;\r\n  }\r\n  const requestBody = event.request.arrayBuffer();\r\n  const requestResponse = requestBody.then(async (body) => {\r\n    const data = decode(body) as { clientId: string; uuid: string };\r\n    return await sendRequest(data.clientId, data.uuid);\r\n  });\r\n  event.waitUntil(requestResponse);\r\n  event.respondWith(requestResponse);\r\n  return true;\r\n}\r\n\r\nexport function handleMessage(event: ExtendableMessageEvent) {\r\n  // console.log('service worker got a message', event.data);\r\n  switch (event.data.type) {\r\n    case 'register-client-main': {\r\n      void self.clients.claim();\r\n      const source = event.source as WindowClient;\r\n      self.clients.get(source.id).then((client) => {\r\n        if (!client) {\r\n          throw new WebRChannelError(\"Can't respond to client in service worker message handler\");\r\n        }\r\n        client.postMessage({\r\n          type: 'registration-successful',\r\n          clientId: source.id,\r\n        });\r\n      }, (reason) => {\r\n        console.log(reason);\r\n        throw new WebRChannelError(\"Can't respond to client in service worker message handler\");\r\n      });\r\n      break;\r\n    }\r\n    case 'wasm-webr-fetch-response': {\r\n      if (event.data.uuid in requests) {\r\n        requests[event.data.uuid].resolve(event.data.response);\r\n        delete requests[event.data.uuid];\r\n      }\r\n      break;\r\n    }\r\n    default:\r\n      return false;\r\n  }\r\n  return true;\r\n}\r\n\r\nexport const webRHandlers: ServiceWorkerHandlers = {\r\n  handleInstall,\r\n  handleActivate,\r\n  handleFetch,\r\n  handleMessage\r\n};\r\n\r\nself.addEventListener('install', webRHandlers.handleInstall);\r\nself.addEventListener('activate', webRHandlers.handleActivate);\r\nself.addEventListener('fetch', webRHandlers.handleFetch);\r\nself.addEventListener('message', webRHandlers.handleMessage);\r\n"],
  "mappings": "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",
  "names": ["encode", "decode", "encode", "decode", "objs", "_newSetter"]
}
